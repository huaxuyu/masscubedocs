<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MassCube – MassCube Documentation</title>
    <link>https://example.org/docs/</link>
    <description>Recent content in MassCube Documentation on MassCube</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://example.org/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>alignment</title>
      <link>https://example.org/docs/api/alignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/alignment/</guid>
      <description>
        
        
        &lt;p&gt;This module provides functionality for aligning metabolic features from different samples in mass spectrometry data. Isotopes and in-source fragments are not considered in the alignment process.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The main components of this module include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feature Alignment&lt;/strong&gt;: Align features across different samples, considering parameters like m/z tolerance and retention time tolerance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gap Filling&lt;/strong&gt;: Fill in missing features across aligned samples using various strategies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Retention Time Correction&lt;/strong&gt;: Correct retention times to align features more accurately.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Output&lt;/strong&gt;: Save the aligned features to a file.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;feature_alignment&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature_alignment&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature_alignment&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;feature_alignment(path, parameters, drop_by_fill_pct_ratio=0.1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Aligns features from individual files (.txt) based on m/z and retention time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str): The path to the feature tables.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parameters&lt;/code&gt; (Params object): The parameters used for alignment, including tolerances and correction settings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drop_by_fill_pct_ratio&lt;/code&gt; (float): The threshold for dropping features based on fill percentage (default 0.1).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (DataFrame): The aligned feature table.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;gap_filling&lt;span class=&#34;absolute -mt-20&#34; id=&#34;gap_filling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#gap_filling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;gap_filling(features, parameters, mode=&#39;forced_peak_picking&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fills the gaps in the aligned feature table using specified strategies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (list): The aligned features.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parameters&lt;/code&gt; (Params object): The parameters used for gap filling.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt; (str): The mode of gap filling (&lt;code&gt;&#39;forced_peak_picking&#39;&lt;/code&gt; or &lt;code&gt;&#39;0.1_min_intensity&#39;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (list): The aligned features with filled gaps.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;output_feature_table&lt;span class=&#34;absolute -mt-20&#34; id=&#34;output_feature_table&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#output_feature_table&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;output_feature_table(feature_table, output_path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Outputs the aligned feature table to a specified file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (DataFrame): The aligned feature table.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_path&lt;/code&gt; (str): The path where the aligned feature table will be saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;retention_time_correction&lt;span class=&#34;absolute -mt-20&#34; id=&#34;retention_time_correction&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#retention_time_correction&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;retention_time_correction(mz_ref, rt_ref, mz_arr, rt_arr, rt_max=50, mode=&#39;linear_interpolation&#39;, mz_tol=0.015, rt_tol=2.0, found_marker_ratio=0.4, return_model=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Corrects retention times for feature alignment using selected anchors and a specified correction model.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mz_ref&lt;/code&gt; (np.array): The m/z values of the reference features.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_ref&lt;/code&gt; (np.array): The retention times of the reference features.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_arr&lt;/code&gt; (np.array): The m/z values of the features to be corrected.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_arr&lt;/code&gt; (np.array): The retention times of the features to be corrected.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_max&lt;/code&gt; (float): Maximum retention time (default 50).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt; (str): Mode of correction (&lt;code&gt;&#39;linear_interpolation&#39;&lt;/code&gt; by default).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): m/z tolerance for selecting anchors.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt; (float): Retention time tolerance for selecting anchors.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;found_marker_ratio&lt;/code&gt; (float): Ratio of found markers required for correction (default 0.4).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return_model&lt;/code&gt; (bool): Whether to return the correction model (default &lt;code&gt;False&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rt_corr&lt;/code&gt; (np.array): The corrected retention times.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;rt_anchor_selection&lt;span class=&#34;absolute -mt-20&#34; id=&#34;rt_anchor_selection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#rt_anchor_selection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;rt_anchor_selection(data_list, num=50, noise_tol=0.3, mz_tol=0.01, return_all_anchor=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Selects anchors for retention time correction based on the provided data. Anchors are selected based on intensity, peak shape, and distribution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data_list&lt;/code&gt; (list): A list of &lt;code&gt;MSData&lt;/code&gt; objects or file names of the output &lt;code&gt;.txt&lt;/code&gt; files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;num&lt;/code&gt; (int): Number of anchors to be selected (default 50).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noise_tol&lt;/code&gt; (float): Noise level tolerance for selecting anchors (default 0.3).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): m/z tolerance for anchor selection (default 0.01).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return_all_anchor&lt;/code&gt; (bool): Whether to return all anchors (default &lt;code&gt;False&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;anchors&lt;/code&gt; (list): A list of anchors (m/z and retention times) for retention time correction.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;_split_to_train_test&lt;span class=&#34;absolute -mt-20&#34; id=&#34;_split_to_train_test&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#_split_to_train_test&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;_split_to_train_test(array, interval=0.3)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Splits selected anchors into training and testing sets based on a specified time interval.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt; (numpy.ndarray): The retention times of the selected anchors.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interval&lt;/code&gt; (float): The time interval for splitting the anchors (default 0.3).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;train_idx&lt;/code&gt; (list): Indices of the training set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test_idx&lt;/code&gt; (list): Indices of the testing set.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Classes&lt;span class=&#34;absolute -mt-20&#34; id=&#34;classes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#classes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;Feature&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A class that models a feature in mass spectrometry data, typically defined by a unique pair of m/z and retention time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attributes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt; (int): Index of the feature.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reference_file&lt;/code&gt; (str): The reference file for the feature.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz&lt;/code&gt; (float): m/z value.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt&lt;/code&gt; (float): Retention time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;highest_intensity&lt;/code&gt; (float): The highest peak height from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;best_ms2&lt;/code&gt; (str): The best MS2 spectrum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gaussian_similarity&lt;/code&gt; (float): Gaussian similarity score.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noise_level&lt;/code&gt; (float): Noise level.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asymmetry_factor&lt;/code&gt; (float): Asymmetry factor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fill_percentage&lt;/code&gt; (float): Fill percentage across samples.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;charge_state&lt;/code&gt; (int): Charge state (default 1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_isotope&lt;/code&gt; (bool): Indicates if the feature is an isotope.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isotopes&lt;/code&gt; (list): List of isotopes associated with the feature.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_in_source_fragment&lt;/code&gt; (bool): Indicates if the feature is an in-source fragment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adduct_type&lt;/code&gt; (str): Adduct type.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotation&lt;/code&gt; (str): Annotation of the feature.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;search_mode&lt;/code&gt; (str): Search mode (&lt;code&gt;&#39;identity search&#39;&lt;/code&gt;, &lt;code&gt;&#39;hybrid search&#39;&lt;/code&gt;, &lt;code&gt;&#39;mzrt_search&#39;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;formula&lt;/code&gt; (str): Molecular formula.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;similarity&lt;/code&gt; (float): Similarity score (0-1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matched_peak_number&lt;/code&gt; (int): Number of matched peaks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;smiles&lt;/code&gt; (str): SMILES notation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inchikey&lt;/code&gt; (str): InChIKey notation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matched_ms2&lt;/code&gt; (str): Matched MS2 spectrum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_seq&lt;/code&gt; (numpy array): m/z values from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_seq&lt;/code&gt; (numpy array): Retention time values from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peak_height_seq&lt;/code&gt; (numpy array): Peak heights from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peak_area_seq&lt;/code&gt; (numpy array): Peak areas from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms2_seq&lt;/code&gt; (list): List of best MS2 spectra from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detected_seq&lt;/code&gt; (numpy array): Boolean array indicating detection in individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roi_id_seq&lt;/code&gt; (numpy array): ROI IDs from individual files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fold_change&lt;/code&gt; (float): Fold change value.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t_test_p&lt;/code&gt; (float): t-test p-value.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adjusted_t_test_p&lt;/code&gt; (float): Adjusted t-test p-value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__(self, file_number=1)&lt;/code&gt;: Initializes a &lt;code&gt;Feature&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;calculate_mzrt(self)&lt;/code&gt;: Calculates the m/z and retention time of the feature by averaging detected values.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This documentation should serve as a comprehensive guide for understanding and using the code. You can further enhance it by adding specific examples, diagrams, or more in-depth explanations if needed.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>annotation.py</title>
      <link>https://example.org/docs/api/annotation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/annotation/</guid>
      <description>
        
        
        &lt;p&gt;This module is designed for annotating metabolites based on their MS/MS spectra. It includes functions for loading MS/MS databases, performing feature annotation, and exporting results. The module supports various input formats and annotation methods, providing flexibility for different workflows.&lt;/p&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;load_msms_db&lt;span class=&#34;absolute -mt-20&#34; id=&#34;load_msms_db&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#load_msms_db&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;load_msms_db(path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Loads the MS/MS database from a specified path, which can be in &lt;code&gt;.msp&lt;/code&gt;, &lt;code&gt;.pkl&lt;/code&gt;, or &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str): The path to the MS/MS database.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An instance of &lt;code&gt;FlashEntropySearch&lt;/code&gt; with the loaded database indexed for fast searches.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;feature_annotation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature_annotation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature_annotation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;feature_annotation(features, parameters, num=5)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Annotates a list of features based on their MS/MS spectra using a loaded MS/MS database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (list): A list of features to be annotated.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parameters&lt;/code&gt; (Params object): An object containing parameters for the annotation workflow.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;num&lt;/code&gt; (int): The number of top MS/MS spectra to search.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (list): The annotated features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;feature_annotation_mzrt&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature_annotation_mzrt&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature_annotation_mzrt&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;feature_annotation_mzrt(features, path, default_adduct=&amp;quot;[M+H]+&amp;quot;, mz_tol=0.01, rt_tol=0.3)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Annotates features based on a provided mzrt file, typically in CSV format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (list): A list of features to be annotated.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str): The path to the mzrt file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_adduct&lt;/code&gt; (str): The default adduct type for annotation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): The m/z tolerance for matching.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt; (float): The RT tolerance for matching.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (list): The annotated features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;annotate_rois&lt;span class=&#34;absolute -mt-20&#34; id=&#34;annotate_rois&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#annotate_rois&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;annotate_rois(d)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Annotates regions of interest (ROIs) within the MS data using their MS/MS spectra and a loaded MS/MS database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): The MS data object containing the detected ROIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None. The ROIs in the MSData object are annotated in place.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;annotate_ms2&lt;span class=&#34;absolute -mt-20&#34; id=&#34;annotate_ms2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#annotate_ms2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;annotate_ms2(ms2_seq, path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Annotates a sequence of MS/MS spectra using a loaded MS/MS database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ms2_seq&lt;/code&gt; (list): A list of MS/MS spectra (each can be a Scan object).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str): The path to the MS/MS database.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;annotations&lt;/code&gt; (list): A list of annotations for each spectrum in the sequence.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;feature_to_feature_search&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature_to_feature_search&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature_to_feature_search&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;feature_to_feature_search(feature_list, sim_tol=0.8)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Calculates MS2 similarity between features using a hybrid search method, building a similarity matrix.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_list&lt;/code&gt; (list): A list of AlignedFeature objects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sim_tol&lt;/code&gt; (float): The similarity threshold for the feature-to-feature search.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;similarity_matrix&lt;/code&gt; (pandas.DataFrame): A DataFrame containing the similarity matrix between features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;index_feature_list&lt;span class=&#34;absolute -mt-20&#34; id=&#34;index_feature_list&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#index_feature_list&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;index_feature_list(feature_list, return_db=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Indexes a list of features for spectrum entropy search.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_list&lt;/code&gt; (list): A list of AlignedFeature objects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return_db&lt;/code&gt; (bool): Whether to return the indexed database along with the search object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either an instance of &lt;code&gt;FlashEntropySearch&lt;/code&gt; or a tuple of (&lt;code&gt;FlashEntropySearch&lt;/code&gt;, &lt;code&gt;db&lt;/code&gt;) depending on the &lt;code&gt;return_db&lt;/code&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;output_ms2_to_msp&lt;span class=&#34;absolute -mt-20&#34; id=&#34;output_ms2_to_msp&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#output_ms2_to_msp&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;output_ms2_to_msp(feature_table, output_path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Exports MS2 spectra to MSP format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (pandas.DataFrame): A DataFrame containing the MS2 spectra.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_path&lt;/code&gt; (str): The path to the output MSP file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None. The spectra are written to the specified MSP file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;extract_peaks_from_string&lt;span class=&#34;absolute -mt-20&#34; id=&#34;extract_peaks_from_string&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#extract_peaks_from_string&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;extract_peaks_from_string(ms2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Extracts peaks from an MS2 spectrum provided as a string.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ms2&lt;/code&gt; (str): The MS2 spectrum in string format.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;peaks&lt;/code&gt; (numpy.array): The peaks extracted as a numpy array.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;_convert_peaks_to_string&lt;span class=&#34;absolute -mt-20&#34; id=&#34;_convert_peaks_to_string&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#_convert_peaks_to_string&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;_convert_peaks_to_string(peaks)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Converts peaks from a numpy array to a string format suitable for storage or export.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;peaks&lt;/code&gt; (numpy.array): The peaks in numpy array format.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ms2&lt;/code&gt; (str): The peaks converted to a string format.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>classifier_builder.py</title>
      <link>https://example.org/docs/api/classifier_builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/classifier_builder/</guid>
      <description>
        
        
        &lt;p&gt;This module, &lt;code&gt;classifier_builder.py&lt;/code&gt;, provides a set of tools for building and using a random forest classifier for metabolomics data analysis. It supports feature selection, model training, cross-validation, and prediction on new data. Below is a detailed breakdown of the functionality provided.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This module is designed to help users build and use a random forest classification model from metabolomics data. It integrates data processing, feature selection, model training, cross-validation, and prediction. The module supports various steps, including untargeted metabolomics workflows and utility functions for managing data.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;feature_selection&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature_selection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature_selection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;feature_selection(X, y, k=None)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Selects the top &lt;code&gt;k&lt;/code&gt; features based on statistical tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt;: Feature matrix.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;: Target variable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;: Number of features to select.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Returns:&lt;/strong&gt; Selected features and their indices.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;train_rdf_model&lt;span class=&#34;absolute -mt-20&#34; id=&#34;train_rdf_model&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#train_rdf_model&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;train_rdf_model(X_train, y_train)&lt;/code&gt;**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Trains a random forest classifier.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X_train&lt;/code&gt;: Training feature matrix.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y_train&lt;/code&gt;: Training target variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Returns:&lt;/strong&gt; Trained random forest model.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;cross_validate_model&lt;span class=&#34;absolute -mt-20&#34; id=&#34;cross_validate_model&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cross_validate_model&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cross_validate_model(X, y, model, k=5, random_state=0)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Performs k-fold cross-validation on the model.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt;: Feature matrix.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;: Target variable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt;: Trained random forest model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;: Number of folds.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;random_state&lt;/code&gt;: Random state for reproducibility.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Returns:&lt;/strong&gt; List of accuracy scores for each fold.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;predict&lt;span class=&#34;absolute -mt-20&#34; id=&#34;predict&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#predict&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;predict(model, X_test)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Predicts the class labels for test data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt;: Trained random forest model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X_test&lt;/code&gt;: Test feature matrix.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Returns:&lt;/strong&gt; Predicted class labels.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;evaluate_model&lt;span class=&#34;absolute -mt-20&#34; id=&#34;evaluate_model&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#evaluate_model&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;evaluate_model(predictions, y_test)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Evaluates the model&amp;rsquo;s performance using accuracy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;predictions&lt;/code&gt;: Predicted class labels.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y_test&lt;/code&gt;: True class labels.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Returns:&lt;/strong&gt; Accuracy score.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;build_classifier&lt;span class=&#34;absolute -mt-20&#34; id=&#34;build_classifier&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#build_classifier&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;build_classifier(path=None, feature_num=None, gaussian_cutoff=0.6, fill_percentage_cutoff=0.9, fill_ratio=0.5, cross_validation_k=5, data_processed=False)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Builds a random forest classifier from raw or processed data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Project path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature_num&lt;/code&gt;: Number of features to select.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gaussian_cutoff&lt;/code&gt;: Cutoff for Gaussian similarity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fill_percentage_cutoff&lt;/code&gt;: Minimum percentage of non-zero values to retain a feature.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fill_ratio&lt;/code&gt;: Ratio to replace zero values in the data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cross_validation_k&lt;/code&gt;: Number of folds for cross-validation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data_processed&lt;/code&gt;: Flag to indicate if the data is already processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Outputs:&lt;/strong&gt; Saves the trained model, selected features, and evaluation metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;predict_samples&lt;span class=&#34;absolute -mt-20&#34; id=&#34;predict_samples&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#predict_samples&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;predict_samples(path, mz_tol=0.01, rt_tol=0.3)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Predicts sample classes using the trained model.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Project path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt;: m/z tolerance for matching features.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt;: Retention time tolerance for matching features.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Outputs:&lt;/strong&gt; Saves predictions in the specified project path.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Data preparation</title>
      <link>https://example.org/docs/workflows/data_preparation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/workflows/data_preparation/</guid>
      <description>
        
        
        &lt;h2&gt;File conversion&lt;span class=&#34;absolute -mt-20&#34; id=&#34;file-conversion&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#file-conversion&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Raw LC-MS data need to be converted to &lt;strong&gt;mzML&lt;/strong&gt; or &lt;strong&gt;mxXML&lt;/strong&gt; format for further processing in MassCube.&lt;/p&gt;





  












&lt;div class=&#34;overflow-x-auto mt-6 flex rounded-lg border py-2 ltr:pr-4 rtl:pl-4 contrast-more:border-current contrast-more:dark:border-current border-orange-100 bg-orange-50 text-orange-800 dark:border-orange-400/30 dark:bg-orange-400/20 dark:text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:pl-3 ltr:pr-2 rtl:pr-3 rtl:pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;w-full min-w-0 leading-7&#34;&gt;
    &lt;div class=&#34;mt-6 leading-7 first:mt-0&#34;&gt;
      Currently, only &lt;strong&gt;centroid&lt;/strong&gt; data are supported in MassCube.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;We recommend to use &lt;strong&gt;MSConvert&lt;/strong&gt; for file conversion.&lt;/p&gt;
&lt;h3&gt;Download and install MSConvert&lt;span class=&#34;absolute -mt-20&#34; id=&#34;download-and-install-msconvert&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download-and-install-msconvert&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Visit the &lt;a href=&#34;https://proteowizard.sourceforge.io/download.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official website&lt;/a&gt; to download ProteoWizard.&lt;/p&gt;
&lt;h3&gt;File conversion using MSConvert&lt;span class=&#34;absolute -mt-20&#34; id=&#34;file-conversion-using-msconvert&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#file-conversion-using-msconvert&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;../MSConvert.png&#34; title=&#34;Fig. 1. MSConvert GUI&#34; alt=&#34;&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;Fig. 1. MSConvert GUI&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Step 1. Set options&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-1-set-options&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-1-set-options&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Check the boxes as shown in &lt;strong&gt;Fig. 1&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;overflow-x-auto mt-6 flex rounded-lg border py-2 ltr:pr-4 rtl:pl-4 contrast-more:border-current contrast-more:dark:border-current border-yellow-100 bg-yellow-50 text-yellow-900 dark:border-yellow-200/30 dark:bg-yellow-700/30 dark:text-yellow-200&#34;&gt;
  &lt;div class=&#34;ltr:pl-3 ltr:pr-2 rtl:pr-3 rtl:pl-2&#34;&gt;&lt;div class=&#34;select-none text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ⚠️
      &lt;/div&gt;&lt;/div&gt;
  &lt;div class=&#34;w-full min-w-0 leading-7&#34;&gt;
    &lt;div class=&#34;mt-6 leading-7 first:mt-0&#34;&gt;
      Do NOT check &lt;strong&gt;Use Zlib compression&lt;/strong&gt;.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Step 2. Set the Peak Picking filter&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-2-set-the-peak-picking-filter&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-2-set-the-peak-picking-filter&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Step 3. Add the Peak Picking filter&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-3-add-the-peak-picking-filter&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-3-add-the-peak-picking-filter&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Step 4. Browse and load files&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-4-browse-and-load-files&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-4-browse-and-load-files&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Step 5. Start conversion&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-5-start-conversion&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-5-start-conversion&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;By default, the converted files will be saved in the same directory as the raw files.&lt;/p&gt;
&lt;/div&gt;
&lt;details class=&#34;last-of-type:mb-0 rounded-lg bg-neutral-50 dark:bg-neutral-800 p-2 mt-4 group&#34; &gt;
  &lt;summary class=&#34;flex items-center cursor-pointer select-none list-none p-1 rounded transition-colors hover:bg-gray-100 dark:hover:bg-neutral-800 before:mr-1 before:inline-block before:transition-transform before:content-[&#39;&#39;] dark:before:invert rtl:before:rotate-180 group-open:before:rotate-90&#34;&gt;
    &lt;strong class=&#34;text-lg&#34;&gt;Convert files in command line mode&lt;/strong&gt;
  &lt;/summary&gt;
  &lt;div class=&#34;p-2 overflow-hidden&#34;&gt;
    You can also convert files using MSConvert in command line mode. For more information, please refer to the &lt;a href=&#34;https://proteowizard.sourceforge.io/tools/msconvert.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;.
  &lt;/div&gt;
&lt;/details&gt;

&lt;h2&gt;Parameter file&lt;span class=&#34;absolute -mt-20&#34; id=&#34;parameter-file&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#parameter-file&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A parameter file (.csv) is used to set parameters for the workflow. A templete is provided &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/parameters.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. If not provided, the &lt;a href=&#34;../parameters&#34; &gt;default parameters&lt;/a&gt; will be applied. For MassCube version 1.0 or earlier, please use this &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/parameters_ver1.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;template&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Sample table&lt;span class=&#34;absolute -mt-20&#34; id=&#34;sample-table&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sample-table&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A sample table (.csv) is used to claim the name of samples and their groups including biological groups, quality control samples, or blank samples. A templete is provided &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/sample_table.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. For MassCube version 1.0 or earlier, please use this &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/sample_table_ver1.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;template&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For large-scale metabolomics data, it&amp;rsquo;s not easy to prepare the sample table manually. In MassCube, we provide a function to automatically generate the sample table based on the file names in the data folder, and users can further define the groups.&lt;/p&gt;
&lt;h3&gt;Quickly generate sample table&lt;span class=&#34;absolute -mt-20&#34; id=&#34;quickly-generate-sample-table&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#quickly-generate-sample-table&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In the project folder, open a terminal and run the following command:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;generate-sample-table&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Your project folder should include a subfolder named &lt;strong&gt;data&lt;/strong&gt; that contains the raw LC-MS data files in &lt;strong&gt;mzML&lt;/strong&gt; or &lt;strong&gt;mzXML&lt;/strong&gt; format.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;my_project
├── data
│ ├── sample1.mzML
│ ├── sample2.mzML
| └── ...
|── ...&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;





  












&lt;div class=&#34;overflow-x-auto mt-6 flex rounded-lg border py-2 ltr:pr-4 rtl:pl-4 contrast-more:border-current contrast-more:dark:border-current border-orange-100 bg-orange-50 text-orange-800 dark:border-orange-400/30 dark:bg-orange-400/20 dark:text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:pl-3 ltr:pr-2 rtl:pr-3 rtl:pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;w-full min-w-0 leading-7&#34;&gt;
    &lt;div class=&#34;mt-6 leading-7 first:mt-0&#34;&gt;
      You need to further specify the groups in the generated sample table.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>feature_detection</title>
      <link>https://example.org/docs/api/feature_detection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/feature_detection/</guid>
      <description>
        
        
        &lt;p&gt;This module provides tools for detecting features or peaks in mass spectrometry (MS) data. The main functionalities include finding regions of interest (ROIs), cutting ROIs based on intensity thresholds, and calculating various metrics related to the peaks.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ROI Detection&lt;/strong&gt;: Identifies regions of interest in the MS data, capturing significant peaks and their characteristics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ROI Processing&lt;/strong&gt;: Provides tools to refine and cut ROIs, calculate peak areas, and evaluate peak quality.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt;: Helper functions to support the detection and processing of ROIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;find_rois&lt;span class=&#34;absolute -mt-20&#34; id=&#34;find_rois&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#find_rois&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;find_rois(d)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Identifies regions of interest (ROIs) in the MS data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): An object that contains the MS data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;final_rois&lt;/code&gt; (list of &lt;code&gt;Roi&lt;/code&gt; objects): A list of detected ROIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cut_roi&lt;span class=&#34;absolute -mt-20&#34; id=&#34;cut_roi&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cut_roi&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cut_roi(r, int_tol=1000, sigma=1.2, prominence_ratio=0.1, distance=5)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cuts a region of interest (ROI) into smaller segments based on intensity and peak prominence.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt; (Roi object): The ROI object to be cut.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_tol&lt;/code&gt; (int): Intensity tolerance for cutting (default 1000).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sigma&lt;/code&gt; (float): Sigma value for Gaussian filtering (default 1.2).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prominence_ratio&lt;/code&gt; (float): Ratio of prominence used for finding peaks (default 0.1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;distance&lt;/code&gt; (int): Minimum distance between peaks (default 5).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cut_rois&lt;/code&gt; (list of &lt;code&gt;Roi&lt;/code&gt; objects): A list of cut ROIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;find_closest_index_ordered(array, target, tol=0.01)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finds the index of the closest value in an ordered array.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt; (list or numpy array): The ordered array to search.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;target&lt;/code&gt; (float): The target value to find.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tol&lt;/code&gt; (float): Tolerance for considering a match (default 0.01).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idx&lt;/code&gt; (int or None): The index of the closest value, or &lt;code&gt;None&lt;/code&gt; if no suitable match is found.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Classes&lt;span class=&#34;absolute -mt-20&#34; id=&#34;classes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#classes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;Roi&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;roi&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#roi&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A class to represent a region of interest (ROI) in mass spectrometry data. An ROI typically corresponds to a peak or a group of peaks in a chromatogram.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attributes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt; (int): Identifier for the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scan_idx_seq&lt;/code&gt; (list of int): List of scan indices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_seq&lt;/code&gt; (list of float): List of retention times.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_seq&lt;/code&gt; (list of float): List of m/z values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_seq&lt;/code&gt; (list of int): List of intensity values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms2_seq&lt;/code&gt; (list): List of associated MS2 spectra.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gap_counter&lt;/code&gt; (int): Counter for the number of gaps in the ROI&amp;rsquo;s tail.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz&lt;/code&gt; (float): m/z value of the ROI peak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt&lt;/code&gt; (float): Retention time of the ROI peak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scan_number&lt;/code&gt; (int): Number of scans in the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peak_area&lt;/code&gt; (float): Area under the peak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peak_height&lt;/code&gt; (float): Height of the peak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;best_ms2&lt;/code&gt; (MS2 object): The best associated MS2 spectrum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; (int): Length of the ROI in terms of the number of scans.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;merged&lt;/code&gt; (bool): Indicates if the ROI has been merged with others.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gaussian_similarity&lt;/code&gt; (float): Gaussian similarity score of the peak shape.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noise_level&lt;/code&gt; (float): Estimated noise level in the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asymmetry_factor&lt;/code&gt; (float): Asymmetry factor of the peak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cut&lt;/code&gt; (bool): Indicates if the ROI has been cut into smaller segments.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;charge_state&lt;/code&gt; (int): Charge state of the ROI (default 1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_isotope&lt;/code&gt; (bool): Indicates if the ROI represents an isotope.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isotope_mz_seq&lt;/code&gt; (list of float): List of m/z values for isotopes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isotope_int_seq&lt;/code&gt; (list of int): List of intensities for isotopes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isotope_id_seq&lt;/code&gt; (list of int): List of identifiers for isotopes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_in_source_fragment&lt;/code&gt; (bool): Indicates if the ROI is an in-source fragment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isf_child_roi_id&lt;/code&gt; (list of int): List of child ROI IDs if the ROI is an in-source fragment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isf_parent_roi_id&lt;/code&gt; (int): Parent ROI ID if the ROI is an in-source fragment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adduct_type&lt;/code&gt; (str): Type of adduct, if applicable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adduct_parent_roi_id&lt;/code&gt; (int): Parent ROI ID for the adduct.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adduct_child_roi_id&lt;/code&gt; (list of int): List of child ROI IDs for the adduct.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotation&lt;/code&gt; (str): Annotation of the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;formula&lt;/code&gt; (str): Molecular formula associated with the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;similarity&lt;/code&gt; (float): Similarity score for annotation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matched_peak_number&lt;/code&gt; (int): Number of matched peaks in the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;smiles&lt;/code&gt; (str): SMILES notation of the associated molecule.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inchikey&lt;/code&gt; (str): InChIKey notation of the associated molecule.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__(self, scan_idx, rt, mz, intensity)&lt;/code&gt;: Initializes an ROI with scan index, retention time, m/z, and intensity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extend_roi(self, scan_idx, rt, mz, intensity)&lt;/code&gt;: Extends an ROI with new data points.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_roi_info(self, show_annotation=False)&lt;/code&gt;: Prints information about the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get_mz_error(self)&lt;/code&gt;: Calculates the m/z error (maximum - minimum) of the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_rt_ph_pa(self)&lt;/code&gt;: Calculates the peak area and height using the trapezoidal rule.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_top_average(self, num=3)&lt;/code&gt;: Finds the peak height by averaging the top three intensities.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum_roi(self, cal_g_score=True, cal_a_score=True)&lt;/code&gt;: Summarizes the ROI, calculating key attributes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subset_roi(self, start, end)&lt;/code&gt;: Subsets the ROI based on provided start and end positions.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>feature_evaluation.py</title>
      <link>https://example.org/docs/api/feature_evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/feature_evaluation/</guid>
      <description>
        
        
        &lt;p&gt;This module provides tools for predicting the quality of mass spectrometry features based on their peak shape. It includes functions for calculating Gaussian similarity, noise level, and asymmetry factor, which are key indicators of peak quality.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gaussian Similarity Calculation&lt;/strong&gt;: Estimates how closely the shape of a peak matches a Gaussian distribution.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Noise Level Calculation&lt;/strong&gt;: Measures the level of noise in the peak, which can indicate the reliability of the peak detection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Asymmetry Factor Calculation&lt;/strong&gt;: Evaluates the symmetry of a peak, with ideal peaks being more symmetrical.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;calculate_gaussian_similarity&lt;span class=&#34;absolute -mt-20&#34; id=&#34;calculate_gaussian_similarity&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#calculate_gaussian_similarity&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;calculate_gaussian_similarity(x, y)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Calculates the similarity between the observed peak shape and a Gaussian shape using a dot product.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; (numpy array): Retention time values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; (numpy array): Intensity values corresponding to the retention times.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;similarity&lt;/code&gt; (float): Similarity score, where 1 indicates a perfect Gaussian shape and values closer to 0 indicate less similarity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;calculate_noise_level&lt;span class=&#34;absolute -mt-20&#34; id=&#34;calculate_noise_level&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#calculate_noise_level&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;calculate_noise_level(y, intensity_threshold=0.1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Calculates the noise level of a peak by analyzing intensity fluctuations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; (numpy array): Intensity values of the peak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intensity_threshold&lt;/code&gt; (float): Threshold relative to the maximum intensity for considering points in noise calculation (default 0.1).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;noise_level&lt;/code&gt; (float): Noise level of the peak, with higher values indicating more noise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;calculate_asymmetry_factor&lt;span class=&#34;absolute -mt-20&#34; id=&#34;calculate_asymmetry_factor&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#calculate_asymmetry_factor&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;calculate_asymmetry_factor(y)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Calculates the asymmetry factor of the peak at 10% of the peak height.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; (numpy array): Intensity values of the peak.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asymmetry_factor&lt;/code&gt; (float): Asymmetry factor, where values closer to 1 indicate more symmetrical peaks, and values deviating significantly from 1 indicate asymmetry.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Usage&lt;span class=&#34;absolute -mt-20&#34; id=&#34;usage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#usage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Gaussian Similarity Calculation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;gaussian-similarity-calculation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#gaussian-similarity-calculation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Gaussian similarity is a measure of how closely a detected peak&amp;rsquo;s shape matches a Gaussian distribution. This is useful for assessing the quality of the peak, as Gaussian-shaped peaks are often indicative of well-resolved features in chromatography.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;similarity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calculate_gaussian_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Gaussian Similarity: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;similarity&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Noise Level Calculation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;noise-level-calculation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#noise-level-calculation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The noise level is calculated by observing the intensity fluctuations in the peak. Peaks with higher noise levels may be less reliable and indicative of poor detection or background noise.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;noise_level&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calculate_noise_level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Noise Level: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;noise_level&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Asymmetry Factor Calculation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;asymmetry-factor-calculation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#asymmetry-factor-calculation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The asymmetry factor provides insight into the symmetry of the peak, which is another important characteristic of high-quality peaks. Ideal peaks should be symmetrical.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;asymmetry_factor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calculate_asymmetry_factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Asymmetry Factor: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asymmetry_factor&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>feature_grouping.py</title>
      <link>https://example.org/docs/api/feature_grouping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/feature_grouping/</guid>
      <description>
        
        
        &lt;p&gt;This module provides functionalities to group metabolic features in mass spectrometry data based on unique compounds. The module includes methods to annotate isotopes, adducts, and in-source fragments, which are essential for accurate interpretation of mass spectrometry data.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Isotope Annotation&lt;/strong&gt;: Identifies isotopic patterns within the data and annotates features that represent different isotopes of the same compound.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Adduct Annotation&lt;/strong&gt;: Detects and annotates different adducts of a compound, which can appear due to various ionization processes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In-Source Fragment Annotation&lt;/strong&gt;: Identifies and annotates fragments that may form in the ion source, ensuring they are correctly associated with their parent compounds.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;annotate_isotope&lt;span class=&#34;absolute -mt-20&#34; id=&#34;annotate_isotope&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#annotate_isotope&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;annotate_isotope(d, mz_tol=0.015, rt_tol=0.1, valid_intensity_ratio_range=[0.001, 1.2], charge_state_range=[1, 2])&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Annotates isotopes in the MS data by comparing m/z and retention time values.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): An MSData object containing the detected regions of interest (ROIs).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): m/z tolerance for identifying isotopes (default 0.015).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt; (float): Retention time tolerance for identifying isotopes (default 0.1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;valid_intensity_ratio_range&lt;/code&gt; (list): Valid intensity ratio range between isotopes (default [0.001, 1.2]).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;charge_state_range&lt;/code&gt; (list): The range of charge states to consider for isotopes (default [1, 2]).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None. The function directly annotates the &lt;code&gt;d.rois&lt;/code&gt; list with isotope information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;annotate_in_source_fragment&lt;span class=&#34;absolute -mt-20&#34; id=&#34;annotate_in_source_fragment&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#annotate_in_source_fragment&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;annotate_in_source_fragment(d, mz_tol=0.01, rt_tol=0.05)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Annotates in-source fragments by analyzing the MS data, focusing on peaks that may represent fragments of parent compounds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): An MSData object containing the detected ROIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): m/z tolerance for identifying in-source fragments (default 0.01).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt; (float): Retention time tolerance for identifying in-source fragments (default 0.05).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None. The function annotates the &lt;code&gt;d.rois&lt;/code&gt; list with in-source fragment information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;annotate_adduct(d, mz_tol=0.01, rt_tol=0.05)&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;annotate_adductd-mz_tol001-rt_tol005&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#annotate_adductd-mz_tol001-rt_tol005&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Annotates adducts within the MS data by comparing m/z values and retention times, assuming different adducts of the same compound.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): An MSData object containing the detected ROIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): m/z tolerance for identifying adducts (default 0.01).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt; (float): Retention time tolerance for identifying adducts (default 0.05).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None. The function annotates the &lt;code&gt;d.rois&lt;/code&gt; list with adduct information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;peak_peak_correlation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;peak_peak_correlation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#peak_peak_correlation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;peak_peak_correlation(roi1, roi2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Calculates the peak-peak correlation between two ROIs based on their intensity profiles.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;roi1&lt;/code&gt; (ROI object): The first ROI to compare.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roi2&lt;/code&gt; (ROI object): The second ROI to compare.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pp_cor&lt;/code&gt; (float): The peak-peak correlation value, where values close to 1 indicate strong correlation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;get_charge_state&lt;span class=&#34;absolute -mt-20&#34; id=&#34;get_charge_state&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#get_charge_state&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;get_charge_state(mz_seq)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Determines the charge state of a compound based on the difference between m/z values in its isotope series.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mz_seq&lt;/code&gt; (list of floats): A list of m/z values representing the isotope series.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;charge_state&lt;/code&gt; (int): The inferred charge state, either 1 or 2.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Usage&lt;span class=&#34;absolute -mt-20&#34; id=&#34;usage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#usage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Isotope Annotation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;isotope-annotation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#isotope-annotation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To annotate isotopes in your mass spectrometry data:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;annotate_isotope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mz_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rt_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;In-Source Fragment Annotation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;in-source-fragment-annotation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#in-source-fragment-annotation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To annotate in-source fragments:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;annotate_in_source_fragment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mz_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rt_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Adduct Annotation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;adduct-annotation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#adduct-annotation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To annotate adducts in the MS data:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;annotate_adduct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mz_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rt_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Constants&lt;span class=&#34;absolute -mt-20&#34; id=&#34;constants&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#constants&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;_ADDUCT_MASS_DIFFERENCE_POS_AGAINST_H&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;_adduct_mass_difference_pos_against_h&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#_adduct_mass_difference_pos_against_h&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A dictionary containing the mass differences for common adducts in positive ion mode, relative to the proton adduct &lt;code&gt;[M+H]+&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;_ADDUCT_MASS_DIFFERENCE_NEG_AGAINST_H&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;_adduct_mass_difference_neg_against_h&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#_adduct_mass_difference_neg_against_h&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A dictionary containing the mass differences for common adducts in negative ion mode, relative to the deprotonated molecule &lt;code&gt;[M-H]-&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>feature_table_utils.py</title>
      <link>https://example.org/docs/api/feature_table_utils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/feature_table_utils/</guid>
      <description>
        
        
        &lt;p&gt;This utility module provides functions for manipulating and exporting feature tables in metabolomics data analysis. It focuses on converting feature lists to DataFrame format and exporting MS2 spectra to the MSP format. Below are detailed descriptions of the provided functions.&lt;/p&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;output_feature_to_msp&lt;span class=&#34;absolute -mt-20&#34; id=&#34;output_feature_to_msp&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#output_feature_to_msp&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;output_feature_to_msp(feature_table, output_path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Purpose:&lt;/strong&gt;&lt;br&gt;
This function exports MS2 spectra from a DataFrame to the MSP format, which is commonly used in metabolomics for sharing spectral data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (&lt;code&gt;pandas.DataFrame&lt;/code&gt;): The DataFrame containing MS2 spectra data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_path&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): The path where the MSP file will be saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Functionality:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checks if the provided output path ends with &lt;code&gt;.msp&lt;/code&gt; and raises a &lt;code&gt;ValueError&lt;/code&gt; if not.&lt;/li&gt;
&lt;li&gt;Iterates through the rows of the &lt;code&gt;feature_table&lt;/code&gt; DataFrame.&lt;/li&gt;
&lt;li&gt;For each feature, it writes the relevant information (e.g., precursor m/z, adduct type, retention time) and MS2 peaks to the MSP file.&lt;/li&gt;
&lt;li&gt;Handles cases where no MS2 spectrum is available by writing a default &amp;ldquo;Unknown&amp;rdquo; entry.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;output_feature_to_msp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;feature_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;output.msp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;convert_features_to_df&lt;span class=&#34;absolute -mt-20&#34; id=&#34;convert_features_to_df&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#convert_features_to_df&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;convert_features_to_df(features, sample_names)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Purpose:&lt;/strong&gt;&lt;br&gt;
This function converts a list of feature objects into a pandas DataFrame, which is useful for further data analysis or export.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features&lt;/code&gt; (&lt;code&gt;list&lt;/code&gt;): A list of feature objects, each representing a detected metabolite or compound.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sample_names&lt;/code&gt; (&lt;code&gt;list&lt;/code&gt; or &lt;code&gt;array&lt;/code&gt;): A list of sample names corresponding to the columns in the DataFrame.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (&lt;code&gt;pandas.DataFrame&lt;/code&gt;): A DataFrame where each row corresponds to a feature, and the columns contain metadata and intensity values across samples.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Functionality:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collects various attributes of each feature, such as m/z, retention time, adduct type, and any annotation information.&lt;/li&gt;
&lt;li&gt;Includes additional columns for sample-specific peak heights.&lt;/li&gt;
&lt;li&gt;Returns the constructed DataFrame, which is structured for easy export or further analysis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;feature_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convert_features_to_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;features&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sample_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;strong&gt;Example Workflow&lt;/strong&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;example-workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#example-workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Convert Features to DataFrame:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Suppose you have a list of feature objects detected during a metabolomics study. You can convert these features into a DataFrame for easier manipulation and analysis.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;feature_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convert_features_to_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;features&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sample_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Export MS2 Spectra to MSP:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After converting the features to a DataFrame, you might want to export the MS2 spectra data to an MSP file for use in spectral databases or other analysis tools.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;output_feature_to_msp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;feature_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;output_data.msp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;These utility functions are designed to streamline the process of handling and exporting feature data in metabolomics workflows, particularly when dealing with large datasets and the need for standardized formats like MSP.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://example.org/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/installation/</guid>
      <description>
        
        
        &lt;h2&gt;Install Python&lt;span class=&#34;absolute -mt-20&#34; id=&#34;install-python&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#install-python&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Visit the &lt;a href=&#34;https://www.python.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Python website&lt;/a&gt; to download Python. &lt;strong&gt;Python 3.9-3.11&lt;/strong&gt; is recommended.&lt;/p&gt;
&lt;details class=&#34;last-of-type:mb-0 rounded-lg bg-neutral-50 dark:bg-neutral-800 p-2 mt-4 group&#34; &gt;
  &lt;summary class=&#34;flex items-center cursor-pointer select-none list-none p-1 rounded transition-colors hover:bg-gray-100 dark:hover:bg-neutral-800 before:mr-1 before:inline-block before:transition-transform before:content-[&#39;&#39;] dark:before:invert rtl:before:rotate-180 group-open:before:rotate-90&#34;&gt;
    &lt;strong class=&#34;text-lg&#34;&gt;Download Python 3.11&lt;/strong&gt;
  &lt;/summary&gt;
  &lt;div class=&#34;p-2 overflow-hidden&#34;&gt;
    Download &lt;a href=&#34;https://www.python.org/downloads/release/python-3117/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python 3.11&lt;/a&gt;.
  &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Make sure to check the box that says &amp;ldquo;Add Python to PATH&amp;rdquo; during installation.&lt;/p&gt;
&lt;h2&gt;Install &lt;em&gt;masscube&lt;/em&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;install-_masscube_&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#install-_masscube_&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;masscube&lt;/em&gt; is a Python package that can be installed using &lt;strong&gt;pip&lt;/strong&gt;. Open terminal and run&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;pip install masscube
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To update the package to the latest version, open terminal and run&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;pip install masscube --upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Dependencies will be automatically installed. Consider creating a &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;virtual environment&lt;/a&gt; if you&amp;rsquo;re working with Python on multiple projects.&lt;/p&gt;
&lt;details class=&#34;last-of-type:mb-0 rounded-lg bg-neutral-50 dark:bg-neutral-800 p-2 mt-4 group&#34; &gt;
  &lt;summary class=&#34;flex items-center cursor-pointer select-none list-none p-1 rounded transition-colors hover:bg-gray-100 dark:hover:bg-neutral-800 before:mr-1 before:inline-block before:transition-transform before:content-[&#39;&#39;] dark:before:invert rtl:before:rotate-180 group-open:before:rotate-90&#34;&gt;
    &lt;strong class=&#34;text-lg&#34;&gt;Dependencies&lt;/strong&gt;
  &lt;/summary&gt;
  &lt;div class=&#34;p-2 overflow-hidden&#34;&gt;
    &lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;dependencies = [
    &amp;#34;numpy&amp;gt;=1.24&amp;#34;,
    &amp;#34;pandas&amp;gt;=2.2.1&amp;#34;,
    &amp;#34;pyteomics==4.6.3&amp;#34;,
    &amp;#34;scipy&amp;gt;=1.10.1&amp;#34;,
    &amp;#34;tqdm&amp;gt;=4.66.1&amp;#34;,
    &amp;#34;lxml&amp;gt;=4.9.3&amp;#34;,
    &amp;#34;matplotlib&amp;gt;=3.8.2&amp;#34;,
    &amp;#34;ms_entropy==1.2.2&amp;#34;,
    &amp;#34;scikit-learn&amp;gt;=1.3.2&amp;#34;,
    &amp;#34;statsmodels&amp;gt;=0.14.2&amp;#34;
]&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
&lt;/details&gt;

      </description>
    </item>
    
    <item>
      <title>normalization.py</title>
      <link>https://example.org/docs/api/normalization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/normalization/</guid>
      <description>
        
        
        &lt;p&gt;This module provides functions for normalizing metabolomics data, focusing on two main types of normalization: &lt;strong&gt;Sample Normalization&lt;/strong&gt; and &lt;strong&gt;Signal Normalization&lt;/strong&gt;. These methods help address issues like varying sample concentrations and signal drift in mass spectrometry data.&lt;/p&gt;
&lt;h2&gt;Sample Normalization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;sample-normalization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sample-normalization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;These functions focus on normalizing samples to account for differences in total amounts or concentrations between samples.&lt;/p&gt;
&lt;h3&gt;find_normalization_factors&lt;span class=&#34;absolute -mt-20&#34; id=&#34;find_normalization_factors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#find_normalization_factors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;find_normalization_factors(array, method=&#39;pqn&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finds normalization factors for a dataset based on the specified method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt; (numpy array): The data to be normalized.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; (str): The method to find the normalization factors. Options:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;pqn&#39;&lt;/code&gt;: Probabilistic Quotient Normalization.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;numpy array&lt;/code&gt;: Normalization factors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;sample_normalization_by_factors&lt;span class=&#34;absolute -mt-20&#34; id=&#34;sample_normalization_by_factors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sample_normalization_by_factors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sample_normalization_by_factors(array, v)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Normalizes the data based on the provided normalization factors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt; (numpy array): The data to be normalized.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt; (numpy array): The normalization factors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;numpy array&lt;/code&gt;: The normalized data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;find_reference_sample&lt;span class=&#34;absolute -mt-20&#34; id=&#34;find_reference_sample&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#find_reference_sample&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;find_reference_sample(array, method=&#39;median_intensity&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finds the reference sample for normalization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt; (numpy array): The data to be normalized.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; (str): The method to find the reference sample. Options:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;number&#39;&lt;/code&gt;: The sample with the most detected features.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;total_intensity&#39;&lt;/code&gt;: The sample with the highest total intensity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;median_intensity&#39;&lt;/code&gt;: The sample with the highest median intensity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;: The index of the reference sample.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;sample_normalization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;sample_normalization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sample_normalization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sample_normalization(feature_table, individual_sample_groups, method=&#39;pqn&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Normalizes samples using a feature list, typically excluding blank samples.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (pandas DataFrame): The feature table.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;individual_sample_groups&lt;/code&gt; (list): List of groups for individual samples. Blank samples will be skipped.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; (str): The method to find the normalization factors. Options:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;pqn&#39;&lt;/code&gt;: Probabilistic Quotient Normalization.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pandas DataFrame&lt;/code&gt;: The normalized feature table.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Signal Normalization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;signal-normalization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#signal-normalization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;These functions focus on correcting signal drift in the data, particularly important in mass spectrometry.&lt;/p&gt;
&lt;h3&gt;qc_normalization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;qc_normalization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#qc_normalization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;qc_normalization(array, order, qc_idx, batch_idx=None, method=&#39;lowess&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Normalizes samples using quality control (QC) samples to correct for signal drift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt; (numpy array): The data to be normalized. Samples are in columns, and features are in rows.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;order&lt;/code&gt; (list): The order of the samples. It should have the same length as the number of samples.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;qc_idx&lt;/code&gt; (list): The index of the quality control samples.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;batch_idx&lt;/code&gt; (list): The index of the batches. Not used currently.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; (str): The method to normalize the data. Options:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;lowess&#39;&lt;/code&gt;: Locally Weighted Scatterplot Smoothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;numpy array&lt;/code&gt;: The normalized data.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>params.py</title>
      <link>https://example.org/docs/api/params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/params/</guid>
      <description>
        
        
        &lt;p&gt;This module defines and manages parameters for mass spectrometry data analysis, including feature detection, alignment, normalization, and statistical analysis. It provides functionalities to read, validate, and output parameters, as well as to prepare workflows for untargeted metabolomics.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Params Class&lt;/strong&gt;: A class to store, manage, and validate parameters for various stages of mass spectrometry data processing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Helper Functions&lt;/strong&gt;: Functions to determine mass spectrometry (MS) type, ion mode, and to validate parameter ranges.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Classes&lt;span class=&#34;absolute -mt-20&#34; id=&#34;classes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#classes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;Params&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;params&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#params&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A class to store and manage parameters for the project and individual files in mass spectrometry data processing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attributes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Project-Related:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;project_dir&lt;/code&gt; (str): Project directory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sample_names&lt;/code&gt; (list of str): List of raw file paths (without extension).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sample_groups&lt;/code&gt; (list of str): List of sample group names.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sample_group_num&lt;/code&gt; (int): Number of sample groups.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sample_dir&lt;/code&gt; (str): Directory for sample information.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;single_file_dir&lt;/code&gt; (str): Directory for single file output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotation_dir&lt;/code&gt; (str): Directory for annotation output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chromatogram_dir&lt;/code&gt; (str): Directory for chromatogram output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statistics_dir&lt;/code&gt; (str): Directory for statistical analysis output.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MS Data Acquisition:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rt_range&lt;/code&gt; (list of float): Retention time range in minutes, default [0.0, 1000.0].&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ion_mode&lt;/code&gt; (str): Ionization mode, either &amp;ldquo;positive&amp;rdquo; or &amp;ldquo;negative&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Feature Detection:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mz_tol_ms1&lt;/code&gt; (float): m/z tolerance for MS1, default 0.01.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol_ms2&lt;/code&gt; (float): m/z tolerance for MS2, default 0.015.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_tol&lt;/code&gt; (int): Intensity tolerance, default 30000 for Orbitrap and 1000 for other instruments.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roi_gap&lt;/code&gt; (int): Gap within a feature, default 30.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ppr&lt;/code&gt; (float): Peak correlation threshold for feature grouping, default 0.7.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Feature Alignment:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;align_mz_tol&lt;/code&gt; (float): m/z tolerance for MS1, default 0.01.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align_rt_tol&lt;/code&gt; (float): Retention time tolerance, default 0.2.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;run_rt_correction&lt;/code&gt; (bool): Whether to perform retention time correction, default True.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min_scan_num_for_alignment&lt;/code&gt; (int): Minimum scan number for feature alignment, default 6.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Feature Annotation:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;msms_library&lt;/code&gt; (str): Path to the MS/MS library file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms2_sim_tol&lt;/code&gt; (float): MS2 similarity tolerance, default 0.7.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Normalization:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;run_normalization&lt;/code&gt; (bool): Whether to normalize the data, default False.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;normalization_method&lt;/code&gt; (str): Normalization method, default &amp;ldquo;pqn&amp;rdquo; (probabilistic quotient normalization).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;output_single_file&lt;/code&gt; (bool): Whether to output processed individual files as CSV, default False.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_aligned_file&lt;/code&gt; (bool): Whether to output aligned features as CSV, default False.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Statistical Analysis:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;run_statistics&lt;/code&gt; (bool): Whether to perform statistical analysis, default False.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Visualization:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot_bpc&lt;/code&gt; (bool): Whether to plot base peak chromatogram, default False.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_ms2&lt;/code&gt; (bool): Whether to plot MS2 mirror plots for matching, default False.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__(self)&lt;/code&gt;: Initializes a Params object with default values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_parameters_from_csv(self, path)&lt;/code&gt;: Reads parameters from a CSV file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_untargeted_metabolomics_workflow_preparation(self)&lt;/code&gt;: Prepares parameters for an untargeted metabolomics workflow.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_default(self, ms_type, ion_mode)&lt;/code&gt;: Sets default parameters based on the type of mass spectrometer and ionization mode.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;check_parameters(self)&lt;/code&gt;: Validates the parameters using predefined ranges.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_parameters(self, path, format=&amp;quot;json&amp;quot;)&lt;/code&gt;: Outputs the parameters to a file, currently only supports JSON format.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;find_ms_info(file_name)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Determines the type of mass spectrometer and ionization mode from a raw file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_name&lt;/code&gt; (str): The file name of the raw MS data file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ms_type&lt;/code&gt; (str): The type of mass spectrometer (&amp;ldquo;orbitrap&amp;rdquo; or &amp;ldquo;tof&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ion_mode&lt;/code&gt; (str): The ionization mode (&amp;ldquo;positive&amp;rdquo; or &amp;ldquo;negative&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;centroid&lt;/code&gt; (bool): Whether the data is centroided.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Constants&lt;span class=&#34;absolute -mt-20&#34; id=&#34;constants&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#constants&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;PARAMETER_RAGES&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;parameter_rages&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#parameter_rages&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A dictionary containing the acceptable ranges for various parameters.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keys and Values:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;rt_start&amp;quot;&lt;/code&gt;: [0.0, 1000.0]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;rt_end&amp;quot;&lt;/code&gt;: [0.0, 1000.0]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;mz_tol_ms1&amp;quot;&lt;/code&gt;: [0.0, 0.02]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;mz_tol_ms2&amp;quot;&lt;/code&gt;: [0.0, 0.02]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;int_tol&amp;quot;&lt;/code&gt;: [0, 1e10]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;roi_gap&amp;quot;&lt;/code&gt;: [0, 50]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;min_scan_num_for_alignment&amp;quot;&lt;/code&gt;: [0, 50]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;align_mz_tol&amp;quot;&lt;/code&gt;: [0.0, 0.02]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;align_rt_tol&amp;quot;&lt;/code&gt;: [0.0, 2.0]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;ppr&amp;quot;&lt;/code&gt;: [0.5, 1.0]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;ms2_sim_tol&amp;quot;&lt;/code&gt;: [0.0, 1.0]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;PARAMETER_DEFAULT&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;parameter_default&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#parameter_default&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A dictionary containing default values for various parameters.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keys and Values:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;rt_start&amp;quot;&lt;/code&gt;: 0.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;rt_end&amp;quot;&lt;/code&gt;: 1000.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;mz_tol_ms1&amp;quot;&lt;/code&gt;: 0.01&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;mz_tol_ms2&amp;quot;&lt;/code&gt;: 0.015&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;int_tol&amp;quot;&lt;/code&gt;: 30000&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;roi_gap&amp;quot;&lt;/code&gt;: 10&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;min_scan_num_for_alignment&amp;quot;&lt;/code&gt;: 5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;align_mz_tol&amp;quot;&lt;/code&gt;: 0.01&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;align_rt_tol&amp;quot;&lt;/code&gt;: 0.2&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;ppr&amp;quot;&lt;/code&gt;: 0.7&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;ms2_sim_tol&amp;quot;&lt;/code&gt;: 0.7&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This documentation provides a clear and detailed overview of the &lt;code&gt;Params&lt;/code&gt; class and associated functions, which are crucial for managing and validating parameters in mass spectrometry data processing. This should be useful for users who need to configure and customize their data analysis workflows.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>raw_data_utils.py</title>
      <link>https://example.org/docs/api/raw_data_utils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/raw_data_utils/</guid>
      <description>
        
        
        &lt;p&gt;This module provides tools for reading and processing raw mass spectrometry (MS) data, specifically in mzML or mzXML format. It includes a class to handle the data, providing functionalities for extracting scans, finding regions of interest (ROIs), generating chromatograms, and more.&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The main components of this module include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MSData Class&lt;/strong&gt;: A class that models a single MS data file, allowing for the extraction, processing, and visualization of MS data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scan Class&lt;/strong&gt;: A class that represents individual MS scans, including both MS1 and MS2 levels.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Helper Functions&lt;/strong&gt;: Various utility functions to assist in data processing, such as reading files, centroiding data, and finding the best MS2 spectrum.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Classes&lt;span class=&#34;absolute -mt-20&#34; id=&#34;classes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#classes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;MSData&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;msdata&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#msdata&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A class that models a single MS file (mzML or mzXML) and processes the raw data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attributes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_name&lt;/code&gt; (str): Name of the raw data file without extension.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (datetime): Start acquisition time of the raw data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; (Params object): Contains the parameters used for processing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scans&lt;/code&gt; (list): A list of &lt;code&gt;Scan&lt;/code&gt; objects representing each scan in the data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms1_rt_seq&lt;/code&gt; (numpy array): Retention times of all MS1 scans.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bpc_int&lt;/code&gt; (numpy array): Intensity of the Base Peak Chromatogram (BPC).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rois&lt;/code&gt; (list): A list of ROI objects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roi_mz_seq&lt;/code&gt; (numpy array): m/z values of all ROIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roi_rt_seq&lt;/code&gt; (numpy array): Retention time of all ROIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__(self)&lt;/code&gt;: Initializes the &lt;code&gt;MSData&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_raw_data(self, file_name, params, read_ms2=True, clean_ms2=False, centroid=True)&lt;/code&gt;: Reads raw MS data and extracts MS1 and MS2 scans.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extract_scan_mzml(self, spectra, int_tol=0, read_ms2=True, clean_ms2=False, centroid=True)&lt;/code&gt;: Extracts scans from an mzML file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extract_scan_mzxml(self, spectra, int_tol, read_ms2=True, clean_ms2=False, centroid=True)&lt;/code&gt;: Extracts scans from an mzXML file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drop_ion_by_int(self)&lt;/code&gt;: Drops ions by intensity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_rois(self)&lt;/code&gt;: Identifies ROIs in MS1 scans.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cut_rois(self)&lt;/code&gt;: Splits ROIs into smaller pieces.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;summarize_roi(self, cal_g_score=True, cal_a_score=True)&lt;/code&gt;: Processes ROIs and assigns MS2 spectra.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allocate_ms2_to_rois(self)&lt;/code&gt;: Allocates MS2 spectra to ROIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drop_rois_without_ms2(self)&lt;/code&gt;: Removes ROIs without MS2 spectra.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drop_rois_by_length(self, length=5)&lt;/code&gt;: Removes ROIs shorter than a specified length.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_bpc(self, rt_range=None, label_name=False, output_dir=None)&lt;/code&gt;: Plots the Base Peak Chromatogram (BPC).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_single_file(self, user_defined_output_path=None)&lt;/code&gt;: Generates a CSV report of ROIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get_eic_data(self, target_mz, target_rt=None, mz_tol=0.005, rt_tol=0.3, rt_range=None)&lt;/code&gt;: Extracts Extracted Ion Chromatogram (EIC) data for a target m/z.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_eics(self, target_mz_seq, target_rt=None, mz_tol=0.005, rt_tol=0.3, output=None, show_rt_line=True, ylim=None, return_eic_data=False)&lt;/code&gt;: Plots EICs for multiple target m/z values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_eic(self, target_mz, target_rt=None, mz_tol=0.005, rt_tol=0.3, output=None, show_rt_line=True, ylim=None, return_eic_data=False)&lt;/code&gt;: Plots the EIC for a single target m/z.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_ms2_by_mzrt(self, mz_target, rt_target, mz_tol=0.01, rt_tol=0.3, return_best=False)&lt;/code&gt;: Finds MS2 scans by precursor m/z and retention time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_roi_by_mzrt(self, mz_target, rt_target=None, mz_tol=0.01, rt_tol=0.3)&lt;/code&gt;: Finds ROIs by m/z and retention time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_ms1_scan_by_rt(self, rt_target)&lt;/code&gt;: Finds an MS1 scan by retention time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;correct_retention_time(self, f)&lt;/code&gt;: Corrects retention times based on a provided function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_roi(self, roi_idx, mz_tol=0.005, rt_range=[0, np.inf], rt_window=None, output=False)&lt;/code&gt;: Plots the EIC for a specific ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_all_rois(self, output_path, mz_tol=0.01, rt_range=[0, np.inf], rt_window=None)&lt;/code&gt;: Plots the EICs for all ROIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;Scan&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;scan&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#scan&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A class that represents an individual MS scan, either MS1 or MS2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attributes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;level&lt;/code&gt; (int): The MS level of the scan (1 or 2).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scan&lt;/code&gt; (int): Scan number.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt&lt;/code&gt; (float): Retention time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_seq&lt;/code&gt; (numpy array): m/z sequence (for MS1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_seq&lt;/code&gt; (numpy array): Intensity sequence (for MS1).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;precursor_mz&lt;/code&gt; (float): Precursor m/z (for MS2).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peaks&lt;/code&gt; (numpy array): Product m/z and intensity pairs (for MS2).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__(self, level=None, scan=None, rt=None)&lt;/code&gt;: Initializes the &lt;code&gt;Scan&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_info_by_level(self, **kwargs)&lt;/code&gt;: Adds scan information depending on the MS level.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_scan_info(self)&lt;/code&gt;: Prints the scan&amp;rsquo;s information.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_scan(self, mz_range=None, return_data=False)&lt;/code&gt;: Plots the scan data.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Helper Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;helper-functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#helper-functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;code&gt;_clean_ms2(ms2, offset=2, int_drop_ratio=0.01)&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;_clean_ms2ms2-offset2-int_drop_ratio001&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#_clean_ms2ms2-offset2-int_drop_ratio001&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Cleans MS/MS spectra by removing ions with m/z greater than a specified offset and by removing ions with low intensity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ms2&lt;/code&gt; (Scan object): The MS2 scan to clean.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;offset&lt;/code&gt; (float): m/z offset for dropping ions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_drop_ratio&lt;/code&gt; (float): Ratio of the base peak intensity below which ions will be dropped.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;_centroid(mz_seq, int_seq, mz_tol=0.005)&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;_centroidmz_seq-int_seq-mz_tol0005&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#_centroidmz_seq-int_seq-mz_tol0005&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Centroids m/z and intensity sequences.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mz_seq&lt;/code&gt; (numpy array): m/z sequence.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_seq&lt;/code&gt; (numpy array): Intensity sequence.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float): m/z tolerance for centroiding.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;read_raw_file_to_obj(file_name, params=None, int_tol=1000, centroid=True, read_ms2=True, clean_ms2=False, print_summary=False)&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;read_raw_file_to_objfile_name-paramsnone-int_tol1000-centroidtrue-read_ms2true-clean_ms2false-print_summaryfalse&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#read_raw_file_to_objfile_name-paramsnone-int_tol1000-centroidtrue-read_ms2true-clean_ms2false-print_summaryfalse&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Reads a raw MS file into an &lt;code&gt;MSData&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_name&lt;/code&gt; (str): Name of the raw MS data file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; (Params object): Parameters for processing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int_tol&lt;/code&gt; (float): Intensity tolerance for ion filtering.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;centroid&lt;/code&gt; (bool): Whether to centroid the raw data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;print_summary&lt;/code&gt; (bool): Whether to print a summary of the data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): The processed MSData object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;find_best_ms2(ms2_seq)&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;find_best_ms2ms2_seq&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#find_best_ms2ms2_seq&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Finds the best MS2 spectrum from a list of MS2 spectra based on intensity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ms2_seq&lt;/code&gt; (list): List of MS2 spectra.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;best_ms2&lt;/code&gt; (Scan object): The MS2 scan with the highest intensity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;get_start_time(file_name)&lt;/code&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;get_start_timefile_name&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#get_start_timefile_name&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Extracts the start time of the raw data from the file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_name&lt;/code&gt; (str): Absolute path to the raw data file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (datetime): The start acquisition time of the raw data.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>stats.py</title>
      <link>https://example.org/docs/api/stats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/stats/</guid>
      <description>
        
        
        &lt;p&gt;This module provides functions for performing statistical analysis on metabolomics data, including univariate analysis (t-tests and ANOVA) and multivariate analysis (Principal Component Analysis or PCA).&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;strong&gt;Univariate Analysis&lt;/strong&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;univariate-analysis&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#univariate-analysis&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;statistical_analysis&lt;span class=&#34;absolute -mt-20&#34; id=&#34;statistical_analysis&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#statistical_analysis&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;statistical_analysis(feature_table, params, before_norm=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performs statistical analysis on the feature table, including univariate analysis (t-test or ANOVA) and multivariate analysis (PCA).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature_table&lt;/code&gt; (pandas DataFrame): The feature table containing metabolomics data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; (Params object): The parameters for the experiment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_norm&lt;/code&gt; (bool): Whether the analysis is performed before normalization. Default is &lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pandas DataFrame&lt;/code&gt;: The updated feature table with p-values from statistical tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;t_test&lt;span class=&#34;absolute -mt-20&#34; id=&#34;t_test&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#t_test&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;t_test(data_array, individual_sample_groups)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performs a t-test on a feature list for two groups.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data_array&lt;/code&gt; (numpy array): The feature intensities.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;individual_sample_groups&lt;/code&gt; (list): A list of groups of individual samples.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;: p-values from the t-test.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;anova&lt;span class=&#34;absolute -mt-20&#34; id=&#34;anova&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#anova&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;anova(data_array, individual_sample_groups)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performs ANOVA on a feature list for more than two groups.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data_array&lt;/code&gt; (numpy array): The feature intensities.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;individual_sample_groups&lt;/code&gt; (list): A list of groups of individual samples.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;: p-values from the ANOVA test.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;Multivariate Analysis&lt;/strong&gt;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;multivariate-analysis&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#multivariate-analysis&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;pca_analysis&lt;span class=&#34;absolute -mt-20&#34; id=&#34;pca_analysis&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#pca_analysis&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;pca_analysis(data_array, individual_sample_groups, scaling=True, transformation=True, gapFillingRatio=0.2, output_dir=None, before_norm=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performs Principal Component Analysis (PCA) on the data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data_array&lt;/code&gt; (numpy array): The feature intensities. Features are in rows and samples are in columns.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;individual_sample_groups&lt;/code&gt; (list): A list of groups of individual samples.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scaling&lt;/code&gt; (bool): Whether to scale the data. Default is &lt;code&gt;True&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transformation&lt;/code&gt; (bool): Whether to transform the data (log10). Default is &lt;code&gt;True&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gapFillingRatio&lt;/code&gt; (float): The ratio for gap-filling. Default is &lt;code&gt;0.2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_dir&lt;/code&gt; (str): The directory to save the PCA plot. Default is &lt;code&gt;None&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_norm&lt;/code&gt; (bool): Whether the analysis is performed before normalization. Default is &lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vecPC1, vecPC2, var_PC1, var_PC2&lt;/code&gt;: PCA results including the principal component vectors and their explained variance ratios.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>utils_functions.py</title>
      <link>https://example.org/docs/api/utils_functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/utils_functions/</guid>
      <description>
        
        
        &lt;p&gt;This module provides utility functions for metabolomics data processing, including generating sample tables, obtaining timestamps from files, calculating ion masses, and estimating isotope distributions.&lt;/p&gt;
&lt;h3&gt;generate_sample_table&lt;span class=&#34;absolute -mt-20&#34; id=&#34;generate_sample_table&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#generate_sample_table&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;generate_sample_table(path=None, output=True)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Generates a sample table from the mzML or mzXML files in a specified directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str): The path to the directory containing the &amp;lsquo;data&amp;rsquo; subdirectory with mzML or mzXML files. If not specified, the current working directory is used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; (bool): If &lt;code&gt;True&lt;/code&gt;, outputs the sample table to a CSV file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pandas DataFrame&lt;/code&gt; (if &lt;code&gt;output=False&lt;/code&gt;): The sample table containing two columns: &amp;lsquo;Sample&amp;rsquo; and &amp;lsquo;Groups&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Outputs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sample_table.csv&lt;/code&gt; (if &lt;code&gt;output=True&lt;/code&gt;): A CSV file with the sample table.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sample_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_sample_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/path/to/project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;get_timestamps&lt;span class=&#34;absolute -mt-20&#34; id=&#34;get_timestamps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#get_timestamps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;get_timestamps(path, output=True)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Obtains timestamps for individual mzML or mzXML files and sorts the files by acquisition time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str): The path to the directory containing the &amp;lsquo;data&amp;rsquo; subdirectory with mzML or mzXML files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; (bool): If &lt;code&gt;True&lt;/code&gt;, outputs the timestamps to a TXT file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt; or &lt;code&gt;pandas DataFrame&lt;/code&gt; (if &lt;code&gt;output=False&lt;/code&gt;): A list or DataFrame of tuples containing &amp;lsquo;file_name&amp;rsquo; and &amp;lsquo;acquisition_time&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Outputs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;timestamps.txt&lt;/code&gt; (if &lt;code&gt;output=True&lt;/code&gt;): A TXT file with the timestamps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;timestamps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_timestamps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/path/to/project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>visualization.py</title>
      <link>https://example.org/docs/api/visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/visualization/</guid>
      <description>
        
        
        &lt;p&gt;This module provides a suite of data visualization functions tailored for metabolomics data analysis. It includes tools for plotting base peak chromatograms, extracted ion chromatograms (EIC), histograms, mirror images of MS² spectra, and Principal Component Analysis (PCA) plots. These visualizations aid in the interpretation and quality control of metabolomics experiments.&lt;/p&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;plot_bpcs&lt;span class=&#34;absolute -mt-20&#34; id=&#34;plot_bpcs&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#plot_bpcs&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;plot_bpcs(data_list=None, output=None, autocolor=False, show_legend=True)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Plots overlapped Base Peak Chromatograms (BPC) from a list of MSData objects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data_list&lt;/code&gt; (list of MSData objects, optional): A list of MSData objects to be plotted. Each object should contain &lt;code&gt;ms1_rt_seq&lt;/code&gt; (retention time sequence), &lt;code&gt;bpc_int&lt;/code&gt; (BPC intensities), and &lt;code&gt;file_name&lt;/code&gt; attributes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; (str, optional): Path to save the plot as an image file. If &lt;code&gt;None&lt;/code&gt;, the plot is displayed instead of being saved.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autocolor&lt;/code&gt; (bool, default &lt;code&gt;False&lt;/code&gt;): If &lt;code&gt;True&lt;/code&gt;, assigns distinct colors to each BPC using a predefined color list. Otherwise, all BPCs are plotted in black.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_legend&lt;/code&gt; (bool, default &lt;code&gt;True&lt;/code&gt;): If &lt;code&gt;True&lt;/code&gt;, displays a legend with the file names.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plot_bpcs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms_data_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bpc_plot.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;autocolor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;show_legend&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;plot_roi&lt;span class=&#34;absolute -mt-20&#34; id=&#34;plot_roi&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#plot_roi&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;plot_roi(d, roi, mz_tol=0.01, rt_tol=1.0, output=False, break_scan=None)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Plots the Extracted Ion Chromatogram (EIC) for a specified region of interest (ROI).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): The MSData object containing EIC data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roi&lt;/code&gt; (ROI object): The region of interest containing attributes like &lt;code&gt;mz&lt;/code&gt;, &lt;code&gt;rt_seq&lt;/code&gt;, &lt;code&gt;int_seq&lt;/code&gt;, &lt;code&gt;scan_idx_seq&lt;/code&gt;, &lt;code&gt;gaussian_similarity&lt;/code&gt;, &lt;code&gt;noise_level&lt;/code&gt;, &lt;code&gt;asymmetry_factor&lt;/code&gt;, and &lt;code&gt;rt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mz_tol&lt;/code&gt; (float, default &lt;code&gt;0.01&lt;/code&gt;): Mass-to-charge ratio (m/z) tolerance for EIC extraction.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt_tol&lt;/code&gt; (float, default &lt;code&gt;1.0&lt;/code&gt;): Retention time (RT) tolerance around the ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; (str, optional): Path to save the plot as an image file. If &lt;code&gt;False&lt;/code&gt;, the plot is displayed instead of being saved.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;break_scan&lt;/code&gt; (int, optional): Scan index at which to break and color the EIC differently.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plot_roi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;roi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mz_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rt_tol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;roi_plot.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;mirror_ms2_from_scans&lt;span class=&#34;absolute -mt-20&#34; id=&#34;mirror_ms2_from_scans&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#mirror_ms2_from_scans&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;mirror_ms2_from_scans(scan1, scan2, output=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Generates a mirror plot of two MS² spectra for comparison.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scan1&lt;/code&gt; (MS2Scan object): The first MS² scan (experimental).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scan2&lt;/code&gt; (MS2Scan object): The second MS² scan (database).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; (str, optional): Path to save the plot as an image file. If &lt;code&gt;False&lt;/code&gt;, the plot is displayed instead of being saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mirror_ms2_from_scans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scan_exp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scan_db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ms2_mirror.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;mirror_ms2&lt;span class=&#34;absolute -mt-20&#34; id=&#34;mirror_ms2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#mirror_ms2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;mirror_ms2(precursor_mz1, precursor_mz2, peaks1, peaks2, annotation=None, score=None, output=False)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Creates a mirror image plot of two MS² spectra based on precursor m/z and fragment peaks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;precursor_mz1&lt;/code&gt; (float): Precursor m/z of the first spectrum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;precursor_mz2&lt;/code&gt; (float): Precursor m/z of the second spectrum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peaks1&lt;/code&gt; (numpy array): Fragment peaks of the first spectrum, shape &lt;code&gt;(n, 2)&lt;/code&gt; where each row is &lt;code&gt;[m/z, intensity]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;peaks2&lt;/code&gt; (numpy array): Fragment peaks of the second spectrum, shape &lt;code&gt;(n, 2)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotation&lt;/code&gt; (str, optional): Annotation or name for the second spectrum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;score&lt;/code&gt; (float, optional): Similarity score between the two spectra.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; (str, optional): Path to save the plot as an image file. If &lt;code&gt;False&lt;/code&gt;, the plot is displayed instead of being saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mirror_ms2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;precursor1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;precursor2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;peaks_exp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;peaks_db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;annotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Compound A&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.85&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mirror_ms2.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;plot_pca&lt;span class=&#34;absolute -mt-20&#34; id=&#34;plot_pca&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#plot_pca&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;plot_pca(vecPC1, vecPC2, var_PC1, var_PC2, group_names, colors=None, plot_order=None, output_dir=None)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Plots a PCA scatter plot with confidence ellipses for each group.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vecPC1&lt;/code&gt; (array-like): Principal Component 1 scores.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vecPC2&lt;/code&gt; (array-like): Principal Component 2 scores.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;var_PC1&lt;/code&gt; (float): Explained variance ratio for PC1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;var_PC2&lt;/code&gt; (float): Explained variance ratio for PC2.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_names&lt;/code&gt; (list or array-like): Group labels for each sample.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;colors&lt;/code&gt; (list, optional): List of colors for each group. Defaults to a predefined color palette.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_order&lt;/code&gt; (list, optional): Order in which groups are plotted.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_dir&lt;/code&gt; (str, optional): Path to save the PCA plot as an image file. If &lt;code&gt;None&lt;/code&gt;, the plot is displayed instead of being saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plot_pca&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC1_scores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC2_scores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;group_labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#FF5050&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#0078F0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output_dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pca_plot.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;confidence_ellipse&lt;span class=&#34;absolute -mt-20&#34; id=&#34;confidence_ellipse&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#confidence_ellipse&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;confidence_ellipse(x, y, ax, n_std=3.0, facecolor=&#39;none&#39;, **kwargs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Adds a covariance confidence ellipse to a plot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; (array-like): Data for the x-axis.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; (array-like): Data for the y-axis.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ax&lt;/code&gt; (matplotlib.axes.Axes): The axes object to draw the ellipse on.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n_std&lt;/code&gt; (float, default &lt;code&gt;3.0&lt;/code&gt;): Number of standard deviations for the ellipse radius.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;facecolor&lt;/code&gt; (str, default &lt;code&gt;&#39;none&#39;&lt;/code&gt;): Face color of the ellipse.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**kwargs&lt;/code&gt;: Additional keyword arguments for &lt;code&gt;matplotlib.patches.Ellipse&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subplots&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;confidence_ellipse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edgecolor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;random_color_generator&lt;span class=&#34;absolute -mt-20&#34; id=&#34;random_color_generator&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#random_color_generator&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;random_color_generator()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Generates a random CSS4 color name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;str&lt;/code&gt;: A randomly selected CSS4 color name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random_color_generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Predefined Color Lists&lt;span class=&#34;absolute -mt-20&#34; id=&#34;predefined-color-lists&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#predefined-color-lists&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_color_list&lt;/code&gt;: A predefined list of colors used when &lt;code&gt;autocolor=True&lt;/code&gt; in &lt;code&gt;plot_bpcs&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;_color_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;purple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;brown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pink&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gray&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;olive&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cyan&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;COLORS&lt;/code&gt;: A predefined list of hex color codes used in PCA plotting.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;COLORS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#FF5050&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#0078F0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#00B050&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#FFC000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#7030A0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#FF00FF&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#00B0F0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#FF0000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#00FF00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;#0000FF&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>workflows.py</title>
      <link>https://example.org/docs/api/workflows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/workflows/</guid>
      <description>
        
        
        &lt;p&gt;This module summarizes several workflows and utilities for processing untargeted metabolomics data using various tools and packages. It provides comprehensive methods for feature detection, feature alignment, annotation, normalization, statistical analysis, and quality control. The workflows are designed to be flexible, allowing for parallel processing, and they include detailed steps for handling data from raw files to final feature tables.&lt;/p&gt;
&lt;h3&gt;feature_detection&lt;span class=&#34;absolute -mt-20&#34; id=&#34;feature_detection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feature_detection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;feature_detection(file_name, params=None, cal_g_score=True, cal_a_score=True, anno_isotope=True, anno_adduct=True, anno_in_source_fragment=True, annotation=False, ms2_library_path=None, output_dir=None)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performs untargeted feature detection from a single file (e.g., &lt;code&gt;.mzML&lt;/code&gt; or &lt;code&gt;.mzXML&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_name&lt;/code&gt; (str): Path to the raw data file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; (Params object, optional): Parameters for feature detection. If &lt;code&gt;None&lt;/code&gt;, default parameters are used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cal_g_score&lt;/code&gt; (bool, default &lt;code&gt;True&lt;/code&gt;): Whether to calculate the Gaussian similarity score for each ROI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;anno_isotope&lt;/code&gt; (bool, default &lt;code&gt;True&lt;/code&gt;): Whether to annotate isotopes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;anno_adduct&lt;/code&gt; (bool, default &lt;code&gt;True&lt;/code&gt;): Whether to annotate adducts.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;anno_in_source_fragment&lt;/code&gt; (bool, default &lt;code&gt;True&lt;/code&gt;): Whether to annotate in-source fragments.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotation&lt;/code&gt; (bool, default &lt;code&gt;False&lt;/code&gt;): Whether to annotate MS2 spectra using an MS2 library.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms2_library_path&lt;/code&gt; (str, optional): Path to the MS2 library file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_dir&lt;/code&gt; (str, optional): Directory to save output files. If &lt;code&gt;None&lt;/code&gt;, the output is saved in a default location.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData object): An MSData object containing processed data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feature_detection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sample.mzML&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;custom_params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;annotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ms2_library_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;library.msp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;untargeted_metabolomics_workflow&lt;span class=&#34;absolute -mt-20&#34; id=&#34;untargeted_metabolomics_workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#untargeted_metabolomics_workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;untargeted_metabolomics_workflow(path=None, batch_size=100, cpu_ratio=0.8)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performs the full untargeted metabolomics workflow, including feature detection, alignment, annotation, normalization, and statistical analysis.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str, optional): Path to the working directory. If &lt;code&gt;None&lt;/code&gt;, the current working directory is used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;batch_size&lt;/code&gt; (int, default &lt;code&gt;100&lt;/code&gt;): Number of files to process in each batch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpu_ratio&lt;/code&gt; (float, default &lt;code&gt;0.8&lt;/code&gt;): Ratio of CPU cores to use for parallel processing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;untargeted_metabolomics_workflow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/path/to/project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;batch_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cpu_ratio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;batch_file_processing&lt;span class=&#34;absolute -mt-20&#34; id=&#34;batch_file_processing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#batch_file_processing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;batch_file_processing(path=None, batch_size=100, cpu_ratio=0.8)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Processes multiple files in batch mode using the untargeted metabolomics workflow.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (str, optional): Path to the working directory. If &lt;code&gt;None&lt;/code&gt;, the current working directory is used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;batch_size&lt;/code&gt; (int, default &lt;code&gt;100&lt;/code&gt;): Number of files to process in each batch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpu_ratio&lt;/code&gt; (float, default &lt;code&gt;0.8&lt;/code&gt;): Ratio of CPU cores to use for parallel processing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;batch_file_processing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/path/to/project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;batch_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cpu_ratio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Dependencies&lt;span class=&#34;absolute -mt-20&#34; id=&#34;dependencies&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dependencies&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Ensure that the following Python packages are installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;os&lt;/code&gt;, &lt;code&gt;multiprocessing&lt;/code&gt;, &lt;code&gt;pickle&lt;/code&gt;, &lt;code&gt;deepcopy&lt;/code&gt;, &lt;code&gt;pandas&lt;/code&gt;, &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;tqdm&lt;/code&gt;, &lt;code&gt;importlib.metadata&lt;/code&gt;, &lt;code&gt;scipy&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The module also relies on several internal modules and functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MSData&lt;/code&gt;, &lt;code&gt;get_start_time&lt;/code&gt; from &lt;code&gt;.raw_data_utils&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Params&lt;/code&gt;, &lt;code&gt;find_ms_info&lt;/code&gt; from &lt;code&gt;.params&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotate_isotope&lt;/code&gt;, &lt;code&gt;annotate_adduct&lt;/code&gt;, &lt;code&gt;annotate_in_source_fragment&lt;/code&gt; from &lt;code&gt;.feature_grouping&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature_alignment&lt;/code&gt;, &lt;code&gt;gap_filling&lt;/code&gt;, &lt;code&gt;output_feature_table&lt;/code&gt; from &lt;code&gt;.alignment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature_annotation&lt;/code&gt;, &lt;code&gt;annotate_rois&lt;/code&gt;, &lt;code&gt;feature_annotation_mzrt&lt;/code&gt; from &lt;code&gt;.annotation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sample_normalization&lt;/code&gt; from &lt;code&gt;.normalization&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_ms2_matching_from_feature_table&lt;/code&gt; from &lt;code&gt;.visualization&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statistical_analysis&lt;/code&gt; from &lt;code&gt;.stats&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convert_features_to_df&lt;/code&gt;, &lt;code&gt;output_feature_to_msp&lt;/code&gt; from &lt;code&gt;.feature_table_utils&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

      </description>
    </item>
    
    <item>
      <title>mzpkl</title>
      <link>https://example.org/docs/api/mzpkl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/mzpkl/</guid>
      <description>
        
        
        &lt;h2&gt;Overview&lt;span class=&#34;absolute -mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This module defines the structure of the &lt;code&gt;mzpkl&lt;/code&gt; file format, which is a temporary file format used to store the raw MS data
for faster reloading. The &lt;code&gt;mzpkl&lt;/code&gt; file format is a pickle file that is organized this way:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;{
    &amp;#34;name&amp;#34;: str, # the name of the file
    &amp;#34;ion_mode&amp;#34;: str, # the ion mode of the file
    &amp;#34;ms1_time_arr&amp;#34;: np.ndarray, # the time array of the MS1 scans
    &amp;#34;ms1_idx&amp;#34;: np.ndarray, # the index array of the MS1 scans
    &amp;#34;ms2_idx&amp;#34;: np.ndarray, # the index array of the MS2 scans
    &amp;#34;scans&amp;#34;: list of 2D np.ndarray # MS1 and MS2 scans in the file. Each scan is a 2D np.ndarray with shape (n, 2), [[m/z, intensity], ...]
}&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;span class=&#34;absolute -mt-20&#34; id=&#34;functions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#functions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Convert MS Data object to mzpkl&lt;span class=&#34;absolute -mt-20&#34; id=&#34;convert-ms-data-object-to-mzpkl&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#convert-ms-data-object-to-mzpkl&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;convert_MSData_to_mzpkl(d, output_dir: str = None)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Converts an &lt;code&gt;MSData&lt;/code&gt; object to an &lt;code&gt;mzpkl&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData): The MSData object to be converted.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_dir&lt;/code&gt; (str): The directory where the &lt;code&gt;mzpkl&lt;/code&gt; file will be saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the converted &lt;code&gt;mzpkl&lt;/code&gt; file will be saved in the specified directory.&lt;/li&gt;
&lt;li&gt;if the output directory is not specified, the &lt;code&gt;mzpkl&lt;/code&gt; file will be returned as a dictionary.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Read mzpkl to MS Data object&lt;span class=&#34;absolute -mt-20&#34; id=&#34;read-mzpkl-to-ms-data-object&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#read-mzpkl-to-ms-data-object&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;read_mzpkl_to_MSData(d, file_path: str)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Reads an &lt;code&gt;mzpkl&lt;/code&gt; file to an &lt;code&gt;MSData&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; (MSData): The initiated MSData object without scans data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_path&lt;/code&gt; (str): The path to the &lt;code&gt;mzpkl&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>network.py</title>
      <link>https://example.org/docs/api/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/api/network/</guid>
      <description>
        
        
        &lt;p&gt;Documentation is under construction. Please check back later.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Parameters</title>
      <link>https://example.org/docs/workflows/parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/workflows/parameters/</guid>
      <description>
        
        
        &lt;p&gt;Parameters are critical for MS data processing. However, setting parameters are often challenging, especially for beginners. &lt;em&gt;masscube&lt;/em&gt; provides a default parameter setting for users to start with.&lt;/p&gt;
&lt;p&gt;The default parameters are optimized for most untargeted metabolomics studies. Users can also customize the parameters by providing a parameter file.&lt;/p&gt;
&lt;h2&gt;Key parameters&lt;span class=&#34;absolute -mt-20&#34; id=&#34;key-parameters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#key-parameters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Here we summarized six most important parameters in &lt;em&gt;masscube&lt;/em&gt; for untargeted metabolomics data processing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MS1 mass tolerance&lt;/strong&gt;: the mass tolerance for MS1 feature detection. &lt;code&gt;0.005-0.01&lt;/code&gt; Da is recommended.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intensity tolerance&lt;/strong&gt;: the intensity tolerance for MS signals. &lt;code&gt;1000&lt;/code&gt; is recommended for TOF data, and &lt;code&gt;30000&lt;/code&gt; is recommended for Orbitrap data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mass tolerance for alignement&lt;/strong&gt;: the mass tolerance for feature alignment. &lt;code&gt;0.01-0.015&lt;/code&gt; Da is recommended.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RT tolerance for alignment&lt;/strong&gt;: the RT tolerance for feature alignment. &lt;code&gt;0.1-0.3&lt;/code&gt; min is recommended.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MS/MS similarity score threshold&lt;/strong&gt;: the threshold for MS/MS similarity score. &lt;code&gt;0.7-0.8&lt;/code&gt; is recommended.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MS/MS library&lt;/strong&gt;: the MS/MS library for MS/MS annotation.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Default parameters&lt;span class=&#34;absolute -mt-20&#34; id=&#34;default-parameters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#default-parameters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;masscube&lt;/em&gt; automatically acquire the analytical metadata from the raw files including the mass spectrometer type and ionization mode. The corresponding default parameters will be applied based on the metadata.&lt;/p&gt;
&lt;h2&gt;Customize parameters&lt;span class=&#34;absolute -mt-20&#34; id=&#34;customize-parameters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#customize-parameters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;From the &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/parameters.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;template&lt;/a&gt;, you can customize the parameters by providing a parameter file. The parameter file should be a &lt;code&gt;.csv&lt;/code&gt; file with the following columns:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ion_mode&lt;/td&gt;
&lt;td&gt;positive&lt;/td&gt;
&lt;td&gt;MS ion mode, &amp;ldquo;positive&amp;rdquo; or &amp;ldquo;negative&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms_type&lt;/td&gt;
&lt;td&gt;qtof&lt;/td&gt;
&lt;td&gt;type of MS, &amp;ldquo;orbitrap&amp;rdquo;, &amp;ldquo;qtof&amp;rdquo;, &amp;ldquo;tripletof&amp;rdquo; or &amp;ldquo;others&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is_centroid&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;whether the raw data is centroid data, &amp;ldquo;yes&amp;rdquo; or &amp;ldquo;no&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mz_lower_limit&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;lower limit of m/z in Da&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mz_upper_limit&lt;/td&gt;
&lt;td&gt;100000&lt;/td&gt;
&lt;td&gt;upper limit of m/z in Da&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rt_lower_limit&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;lower limit of retention time in minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rt_upper_limit&lt;/td&gt;
&lt;td&gt;10000&lt;/td&gt;
&lt;td&gt;upper limit of retention time in minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms1_abs_int_tol&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;absolute intensity threshold for MS1, recommend 30000 for Orbitrap and 1000 for QTOF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms2_abs_int_tol&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;absolute intensity threshold for MS2, recommend 10000 for Orbitrap and 500 for QTOF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mz_tol_ms1&lt;/td&gt;
&lt;td&gt;0.01&lt;/td&gt;
&lt;td&gt;m/z tolerance for MS1, default is 0.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mz_tol_ms2&lt;/td&gt;
&lt;td&gt;0.015&lt;/td&gt;
&lt;td&gt;m/z tolerance for MS2, default is 0.015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scan_scan_cor_tol&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;scan-to-scan correlation tolerance for feature grouping, default is 0.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mz_tol_alignment&lt;/td&gt;
&lt;td&gt;0.01&lt;/td&gt;
&lt;td&gt;m/z tolerance for alignment, default is 0.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rt_tol_alignment&lt;/td&gt;
&lt;td&gt;0.2&lt;/td&gt;
&lt;td&gt;RT tolerance for alignment, default is 0.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;correct_rt&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;whether to perform RT correction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;merge_features&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;whether to clean feature table by merging features with almost the same m/z and RT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms2_library_path&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;path to the MS2 library (.msp or .pickle)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms2_sim_tol&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;MS2 similarity tolerance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fuzzy_search&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;whether to perform fuzzy search&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sample_normalization&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;whether to normalize the data based on total sample amount/concentration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;signal_normalization&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;whether to run feature-wised normalization to correct systematic signal drift&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;run_statistics&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;whether to perform statistical analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;plot_bpc&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;whether to plot base peak chromatograms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;plot_ms2&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;whether to plot mirror plots for MS2 matching&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quant_method&lt;/td&gt;
&lt;td&gt;peak_height&lt;/td&gt;
&lt;td&gt;value for quantification and output, &amp;ldquo;peak_height&amp;rdquo;, &amp;ldquo;peak_area&amp;rdquo; or &amp;ldquo;top_average&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;by_group_name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;group name for classification&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;More about parameters&lt;span class=&#34;absolute -mt-20&#34; id=&#34;more-about-parameters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#more-about-parameters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Almost all parameters in &lt;em&gt;masscube&lt;/em&gt; are tunable to ensure flexibility and adaptability for different datasets. For programmers, please refer to each function and object in the &lt;a href=&#34;https://example.org/docs/api/&#34; &gt;API documentation&lt;/a&gt; for more details.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Quick Start</title>
      <link>https://example.org/docs/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/quickstart/</guid>
      <description>
        
        
        &lt;p&gt;Let’s dive into the untargeted metabolomics workflow, designed to simplify and streamline untargeted metabolomics analysis. This powerful workflow delivers comprehensive results with just a single command.&lt;/p&gt;
&lt;p&gt;If you haven’t installed MassCube yet, be sure to follow the &lt;a href=&#34;../installation&#34; &gt;installation guide&lt;/a&gt; before proceeding.&lt;/p&gt;
&lt;h2&gt;The MassCube untargeted metabolomics workflow&lt;span class=&#34;absolute -mt-20&#34; id=&#34;the-masscube-untargeted-metabolomics-workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#the-masscube-untargeted-metabolomics-workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The workflow integrates metadata curation, feature detection, evaluation, alignment, annotation, and statistical analysis to provide users with a comprehensive view of the data (&lt;strong&gt;Fig. 1&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;../untargeted_workflow.png&#34; title=&#34;Fig. 1. The MassCube untargeted metabolomics workflow&#34; alt=&#34;&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;Fig. 1. The MassCube untargeted metabolomics workflow&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Input (3+1)&lt;span class=&#34;absolute -mt-20&#34; id=&#34;input-31&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#input-31&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;You need &lt;u&gt;three components&lt;/u&gt; for the project plus &lt;u&gt;one MS/MS library&lt;/u&gt; for annotation.&lt;/p&gt;
&lt;p&gt;In your project folder (e.g. &lt;strong&gt;my_project&lt;/strong&gt;), you need to prepare the following components:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;my_project
├── data
│   ├── sample1.mzML
│   ├── sample2.mzML
|   └── ...
|── sample_table.csv
└── parameters.csv&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; folder: a file folder containing all raw LC-MS data in &lt;u&gt;.mzML&lt;/u&gt; or &lt;u&gt;.mzXML&lt;/u&gt; format. It&amp;rsquo;s &lt;strong&gt;mandatory&lt;/strong&gt;. Instructions for file conversion are provided &lt;a href=&#34;../workflows/data_preparation&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sample_table.csv&lt;/code&gt; file: a csv file to claim the sample groups including biological groups, quality control samples, or blank samples. A template can be downloaded from &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/sample_table.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s &lt;strong&gt;optional&lt;/strong&gt;. If not provided, normalization and statistical analysis will not be applied. &lt;strong&gt;Note:&lt;/strong&gt; In sample table, please specify if a sample is blank or qc from the &amp;ldquo;is_blank&amp;rdquo; and &amp;ldquo;is_qc&amp;rdquo; columns, respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;parameters.csv&lt;/code&gt; file: a csv file to set parameters for the workflow. You can set parameters and download the file for the workflow from &lt;a href=&#34;https://huaxuyu.github.io/masscube_parameters/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. A template can also be downloaded from &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/parameters.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s &lt;strong&gt;optional&lt;/strong&gt;. If not provided, the &lt;a href=&#34;../parameter&#34; &gt;default parameters&lt;/a&gt; will be applied, yet &lt;strong&gt;annotation will not be performed since the MS/MS library is not provided&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MS2 database&lt;/strong&gt;: To annotate MS/MS spectra, you need to download a MS/MS library from &lt;a href=&#34;https://zenodo.org/records/11363475&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. For faster database loading, please download and use the .pkl format.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Extra component for annotation:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mzrt_list.csv&lt;/code&gt; file: a csv file to provide the m/z and retention time for feature annotation. It was designed to annotate features using retention time (e.g. internal standards). A template can be downloaded from &lt;a href=&#34;https://github.com/huaxuyu/masscubedocs/blob/main/content/docs/mzrt_list.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s &lt;strong&gt;optional&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;hextra-cards mt-4 gap-4 grid not-prose&#34; style=&#34;--rows: 3;&#34;&gt;
&lt;a
  class=&#34;hextra-card group flex flex-col justify-start overflow-hidden rounded-lg border border-gray-200 text-current no-underline dark:shadow-none hover:shadow-gray-100 dark:hover:shadow-none shadow-gray-100 active:shadow-sm active:shadow-gray-200 transition-all duration-200 hover:border-gray-300 bg-transparent shadow-sm dark:border-neutral-800 hover:bg-slate-50 hover:shadow-md dark:hover:border-neutral-700 dark:hover:bg-neutral-900&#34;href=&#34;../workflows/data_preparation&#34; &gt;&lt;span class=&#34;flex font-semibold items-start gap-2 p-4 text-gray-700 hover:text-gray-900 dark:text-neutral-200 dark:hover:text-neutral-50&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; fill=&#34;none&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;2&#34; stroke=&#34;currentColor&#34; aria-hidden=&#34;true&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; d=&#34;M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z&#34;/&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; d=&#34;M21 12a9 9 0 11-18 0 9 9 0 0118 0z&#34;/&gt;&lt;/svg&gt;Data Preparation&lt;/span&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;Processing&lt;span class=&#34;absolute -mt-20&#34; id=&#34;processing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#processing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;In the project folder&lt;/strong&gt;, open a terminal and run the following command:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;untargeted-metabolomics&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;last-of-type:mb-0 rounded-lg bg-neutral-50 dark:bg-neutral-800 p-2 mt-4 group&#34; &gt;
  &lt;summary class=&#34;flex items-center cursor-pointer select-none list-none p-1 rounded transition-colors hover:bg-gray-100 dark:hover:bg-neutral-800 before:mr-1 before:inline-block before:transition-transform before:content-[&#39;&#39;] dark:before:invert rtl:before:rotate-180 group-open:before:rotate-90&#34;&gt;
    &lt;strong class=&#34;text-lg&#34;&gt;How to open the terminal&lt;/strong&gt;
  &lt;/summary&gt;
  &lt;div class=&#34;p-2 overflow-hidden&#34;&gt;
    Make sure the terminal directory is set to the project folder. For &lt;a href=&#34;https://johnwargo.com/posts/2024/launch-windows-terminal/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Windows user&lt;/a&gt; and &lt;a href=&#34;https://support.apple.com/guide/terminal/open-or-quit-terminal-apd5265185d-f365-44cb-8b09-71a064a42125/mac#:~:text=Terminal%20for%20me-,Open%20Terminal,%2C%20then%20double%2Dclick%20Terminal.&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MacOS user&lt;/a&gt;
  &lt;/div&gt;
&lt;/details&gt;
&lt;h3&gt;Output&lt;span class=&#34;absolute -mt-20&#34; id=&#34;output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;After the processing, you will find the following files and folders in the project folder:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;project/
├── data
├── sample_table.csv
├── parameters.csv
├── project_files
│   ├── data_processing_metadata_[DATE].pkl
│   ├── features.msp
│   └── ...
├── aligned_feature_table.txt
├── single_files
│   ├── sample1.txt
│   ├── sample2.txt
│   └── ...
├── chromatograms
│   ├── sample1.png
│   ├── sample2.png
│   └── ...
├── ms2_matching
│   ├── compound1.png
│   ├── compound2.png
│   └── ...
├── statistical_analysis
├── ...&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;project_files&lt;/code&gt; folder: a folder containing the metadata file for data processing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aligned_feature_table.txt&lt;/code&gt; file: feature table after alignment (if applied).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;single_files&lt;/code&gt; folder: a folder containing the feature table for each sample.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chromatograms&lt;/code&gt; folder: a folder containing the chromatogram for each sample.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms2_matching&lt;/code&gt; folder: a folder containing the MS/MS matching for each annotated compound.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statistical_analysis&lt;/code&gt; folder: a folder containing the statistical analysis results.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Untargeted metabolomics workflow</title>
      <link>https://example.org/docs/workflows/untargeted_metabolomics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/workflows/untargeted_metabolomics/</guid>
      <description>
        
        
        &lt;h2&gt;Introduction&lt;span class=&#34;absolute -mt-20&#34; id=&#34;introduction&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#introduction&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Data processing is critical for metabolomics studies. A series of steps are required to process the raw data to generate biological hypothesis that can be further validated.&lt;/p&gt;
&lt;p&gt;The MassCube untargeted metabolomics workflow aims to address the burdens in mass spectrometry-based metabolomics data processing. It integrates metadata curation, feature detection, evaluation, alignment, annotation, and statistical analysis to provide users with a comprehensive view of the data.&lt;/p&gt;
&lt;h2&gt;How to use&lt;span class=&#34;absolute -mt-20&#34; id=&#34;how-to-use&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#how-to-use&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Please refer to the &lt;a href=&#34;https://example.org/docs/quickstart&#34; &gt;quick start guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Explainations of the workflow&lt;span class=&#34;absolute -mt-20&#34; id=&#34;explainations-of-the-workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#explainations-of-the-workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;untargeted_metabolomics_workflow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;return_results&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    The untargeted metabolomics workflow. See the documentation for details.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Parameters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    ----------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    path : str
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        The working directory. If None, the current working directory is used.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    return_results : bool
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Whether to return the results. Default is False.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Returns
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    -------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    features : list
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        A list of features.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    params : Params object
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Parameters for the workflow.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Step 1. Define or load parameters&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-1-define-or-load-parameters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-1-define-or-load-parameters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The parameters are critical for MS data processing. However, setting parameters are often challenging, especially for beginners or scientists who are not familiar with the MS data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;masscube&lt;/em&gt; automatically read the MS data and apply the corresponding default parameters. Users can also customize the parameters by providing a parameter file.&lt;/p&gt;
&lt;h3&gt;Step 2. Load sample table and organize data&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-2-load-sample-table-and-organize-data&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-2-load-sample-table-and-organize-data&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A sample table is used to claim the name of samples and their groups. In most metabolomics studies, quality control samples and blank samples are included. &lt;em&gt;masscube&lt;/em&gt; automatically apply normalization and statistical analysis if the sample table is provided.&lt;/p&gt;
&lt;h3&gt;Step 3. Single file processing&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-3-single-file-processing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-3-single-file-processing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Individual files are processed for feature detection, which envolves the detection of peak apex, edges, area, and related MS/MS spectra. It also includes the determination of isotopes, charge states, adducts, and in-source fragments.&lt;/p&gt;
&lt;p&gt;To accelerate the processing, &lt;em&gt;masscube&lt;/em&gt; supports parallel computing for multiple files. By default, the number of threads is set to be the 80% (&lt;code&gt;cpu_ratio=0.8&lt;/code&gt;) of the total CPU cores so that the computer can still be used for other tasks.&lt;/p&gt;
&lt;p&gt;To control the memory usage, the files are processed in batches. The default batch size is 100 (&lt;code&gt;batch_size=100&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;More details about the feature detection can be found &lt;a href=&#34;https://example.org/docs/algorithms/feature_detection&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 4. Feature alignment&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-4-feature-alignment&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-4-feature-alignment&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Feature alignment aims to match the same feature across different samples. The alignment is based on the mass-to-charge ratio and retention time. The mass tolerance and retention time tolerance are critical for the alignment. See &lt;a href=&#34;https://example.org/docs/algorithms/alignment&#34; &gt;alignment&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Step 5. Gap filling&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-5-gap-filling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-5-gap-filling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Gap filling is critical for the downstream statistical analysis, and missing values are treated by forced peak detection. See &lt;a href=&#34;https://example.org/docs/algorithms/gap_filling&#34; &gt;gap filling&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Step 6. MS/MS annotation&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-6-msms-annotation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-6-msms-annotation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Compound annotation was performed by matching the experimental MS/MS spectra with the MS/MS library. The MS/MS similarity score is generated to indicate the confidence of the annotation.&lt;/p&gt;
&lt;p&gt;Flash entropy search is used to accelerate the annotation. &lt;em&gt;masscube&lt;/em&gt; also provides analog search (i.e. hybrid search) for unknown discovery. See &lt;a href=&#34;https://example.org/docs/algorithms/annotation&#34; &gt;annotation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Step 7. Normalization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-7-normalization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-7-normalization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Two types of normalization could be needed in metabolomics to address the systematic signal drifts and the sample-to-sample variation (i.e. total amount/concentration difference). &lt;em&gt;masscube&lt;/em&gt; provides multiple post-acquisition normalization algorithms to address the normalization issue. See &lt;a href=&#34;https://example.org/docs/algorithms/normalization&#34; &gt;normalization&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Step 8. Statistical analysis&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-8-statistical-analysis&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-8-statistical-analysis&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Univariate and multivariate statistical analysis will be performed if sample table is provided. The results will be saved in the &lt;code&gt;statistics&lt;/code&gt; folder. See &lt;a href=&#34;https://example.org/docs/algorithms/statistics&#34; &gt;statistics&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Step 9. Data visualization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-9-data-visualization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-9-data-visualization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Users can choose to plot the base peak chromatogram (BPC) to verify possible bad injections or outliers. The MS/MS matching plots are generated for the annotated compounds. PCA plots are generated for the statistical analysis. See &lt;a href=&#34;https://example.org/docs/algorithms/visualization&#34; &gt;visualization&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Untargeted single file processing in batch mode</title>
      <link>https://example.org/docs/workflows/batch_processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/workflows/batch_processing/</guid>
      <description>
        
        
        &lt;h2&gt;Introduction&lt;span class=&#34;absolute -mt-20&#34; id=&#34;introduction&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#introduction&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Processing each raw LC-MS data individually can be useful for further customized analysis. In this workflow, we introduce how to process single files in batch mode using &lt;em&gt;masscube&lt;/em&gt;. Note, the processed files will not be aligned across samples. Users may employ the &lt;a href=&#34;https://example.org/docs/quickstart&#34; &gt;OneClick untargeted metabolomics workflow&lt;/a&gt; for comprehensive data processing.&lt;/p&gt;
&lt;h2&gt;How to use&lt;span class=&#34;absolute -mt-20&#34; id=&#34;how-to-use&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#how-to-use&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Organize the data&lt;span class=&#34;absolute -mt-20&#34; id=&#34;organize-the-data&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#organize-the-data&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Similar to the untargeted metabolomics workflow, the data should be organized in the following structure:&lt;/p&gt;
&lt;p&gt;You need &lt;u&gt;two components&lt;/u&gt; for the project plus &lt;u&gt;one MS/MS library&lt;/u&gt; for annotation.&lt;/p&gt;
&lt;p&gt;In your project folder (e.g. &lt;strong&gt;my_project&lt;/strong&gt;), you need to prepare the following components:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;my_project
├── data
│   ├── sample1.mzML
│   ├── sample2.mzML
|   └── ...
└── parameters.csv&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Processing&lt;span class=&#34;absolute -mt-20&#34; id=&#34;processing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#processing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;In the project folder&lt;/strong&gt;, open a terminal and run the following command:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;process-files&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Output&lt;span class=&#34;absolute -mt-20&#34; id=&#34;output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;After the processing, you will find the following files and folders in the project folder:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;project/
├── data
├── parameters.csv
├── project.mc
├── single_file_output
│   ├── sample1.txt
│   ├── sample2.txt
│   └── ...
├── chromatogram
│   ├── sample1.png
│   ├── sample2.png
│   └── ...
├── ...&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;project.mc&lt;/code&gt; file: the project file of &lt;em&gt;masscube&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;single_file_output&lt;/code&gt; folder: a folder containing the feature table for each sample.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chromatogram&lt;/code&gt; folder: a folder containing the chromatogram for each sample.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;h2&gt;Explainations of the workflow&lt;span class=&#34;absolute -mt-20&#34; id=&#34;explainations-of-the-workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#explainations-of-the-workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;batch_file_processing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;batch_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cpu_ratio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    The untargeted metabolomics workflow. See the documentation for details.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Parameters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    ----------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    path : str
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        The working directory. If None, the current working directory is used.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    batch_size : int
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        The number of files to be processed in each batch.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    cpu_ratio : float
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        The ratio of CPU cores to be used.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Step 1. Define or load parameters&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-1-define-or-load-parameters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-1-define-or-load-parameters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The parameters are critical for MS data processing. However, setting parameters are often challenging, especially for beginners or scientists who are not familiar with the MS data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;masscube&lt;/em&gt; automatically read the MS data and apply the corresponding default parameters. Users can also customize the parameters by providing a parameter file.&lt;/p&gt;
&lt;h3&gt;Step 2. Single file processing&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-2-single-file-processing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-2-single-file-processing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Individual files are processed for feature detection, which envolves the detection of peak apex, edges, area, and related MS/MS spectra. It also includes the determination of isotopes, charge states, adducts, and in-source fragments.&lt;/p&gt;
&lt;p&gt;To accelerate the processing, &lt;em&gt;masscube&lt;/em&gt; supports parallel computing for multiple files. By default, the number of threads is set to be the 80% (&lt;code&gt;cpu_ratio=0.8&lt;/code&gt;) of the total CPU cores so that the computer can still be used for other tasks.&lt;/p&gt;
&lt;p&gt;To control the memory usage, the files are processed in batches. The default batch size is 100 (&lt;code&gt;batch_size=100&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;More details about the feature detection can be found &lt;a href=&#34;https://example.org/docs/algorithms/feature_detection&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 3. Data visualization&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-3-data-visualization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-3-data-visualization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Users can choose to plot the base peak chromatogram (BPC) to verify possible bad injections or outliers.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Find outliers</title>
      <link>https://example.org/docs/workflows/find-outliers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/workflows/find-outliers/</guid>
      <description>
        
        
        &lt;h2&gt;Introduction&lt;span class=&#34;absolute -mt-20&#34; id=&#34;introduction&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#introduction&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Outliers are data files that differ significantly from the rest of the dataset. In MS experiments, outliers can arise due to various factors such as instrument error, sample preparation issues, or biological variation. Identifying and removing outliers before downstream analysis is crucial to avoid misleading results.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;masscube&lt;/em&gt; evaluates the analytical sequence and reports problematic samples in an unsupervised manner. It assesses the quality of the raw data by analyzing the total peak height of all detected features. Files with a Z-score lower than -2 (by default) are recognized as outliers, ensuring that only high-quality data are included in the downstream analysis.&lt;/p&gt;
&lt;h2&gt;How to use&lt;span class=&#34;absolute -mt-20&#34; id=&#34;how-to-use&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#how-to-use&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Step 1. Organize the data&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-1-organize-the-data&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-1-organize-the-data&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Put all the raw data files in a folder. The data should be organized in the following structure:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;my_project
├── data
│   ├── sample1.mzML
│   ├── sample2.mzML
|   └── ...
└── sample_table.csv&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please provide a sample table to specify the blank samples so that they can be excluded from the outlier detection.&lt;/p&gt;
&lt;h3&gt;Step 2. Run the outlier detection&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-2-run-the-outlier-detection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-2-run-the-outlier-detection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;In the data folder&lt;/strong&gt;, open a terminal and run the following command:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find-outliers&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Output&lt;span class=&#34;absolute -mt-20&#34; id=&#34;output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;After the processing, you will find the following files and folders in the data folder:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;my_project
├── data
│   ├── sample1.mzML
│   ├── sample2.mzML
|   └── ...
├── single_files
│   ├── sample1.txt
│   ├── sample2.txt
|   └── ...
|── sample_table.csv
└── problematic_files.txt&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;problematic_samples.txt&lt;/code&gt;: a text file containing the names of the problematic samples.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;single_files&lt;/code&gt;: a folder containing the feature detection results for each sample.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;h2&gt;Explanation of the workflow&lt;span class=&#34;absolute -mt-20&#34; id=&#34;explanation-of-the-workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#explanation-of-the-workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run_evaluation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Evaluate the run and report the problematic files.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Parameters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    ----------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    path : str
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Path to the project directory.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;run_evaluation&lt;/code&gt; function evaluates the run and reports the problematic files. It checks the quality of the raw data and identifies the problematic samples based on the number of detected features.&lt;/p&gt;
&lt;p&gt;The function generates a &lt;code&gt;problematic_samples.txt&lt;/code&gt; file that lists the names of the problematic samples. Users can further investigate the outliers and decide whether to remove them before downstream analysis.&lt;/p&gt;
&lt;div class=&#34;steps ml-4 mb-12 border-l border-gray-200 pl-6 dark:border-neutral-800 [counter-reset:step]&#34;&gt;
&lt;h3&gt;Step 1. Fast untargeted feature detection&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-1-fast-untargeted-feature-detection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-1-fast-untargeted-feature-detection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A fast untargeted feature detection algorithm is applied to the raw data. The algorithm automatically applies the default parameters for feature detection based on the metadata of the raw files. Parameters are not needed to be set by the users.&lt;/p&gt;
&lt;h3&gt;Step 2. Find outliers&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-2-find-outliers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-2-find-outliers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The total number of features detected in each sample is calculated. Samples with total feature numnber deviating from the mean by more than 3 standard deviations are considered as outliers.&lt;/p&gt;
&lt;h3&gt;Step 3. Report problematic samples&lt;span class=&#34;absolute -mt-20&#34; id=&#34;step-3-report-problematic-samples&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-3-report-problematic-samples&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The names of the problematic samples are saved in the &lt;code&gt;problematic_samples.txt&lt;/code&gt; file. Users can further investigate the outliers and decide whether to remove them before downstream analysis.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Targeted metabolomics workflow</title>
      <link>https://example.org/docs/workflows/targeted_metabolomics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/workflows/targeted_metabolomics/</guid>
      <description>
        
        
        &lt;p&gt;Workflow is under development. Please check back later.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
