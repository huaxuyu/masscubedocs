{"/about/":{"data":{"":"aaa"},"title":"About"},"/contact/":{"data":{"":"Developer and maintainer: Huaxu Yu\nCorresponding auther: Oliver Fiehn"},"title":"Contact"},"/docs/":{"data":{"":"Hello! Welcome to the MassCube documentation!","what-is-masscube#What is MassCube?":"MassCube is designed for mass spectrometry-based metabolomics data processing. The project aims to provide the fundemental functions and purpose-oriented workflows for metabolomics research.\nDocs to be constructed."},"title":"Documentation"},"/docs/alignment/":{"data":{"":"Working on it."},"title":"Feature alignment"},"/docs/annotation/":{"data":{"":"Working on it."},"title":"Compound annotation"},"/docs/api/":{"data":{"":"Working on it."},"title":"API functions"},"/docs/data_preparation/":{"data":{"":"","file-conversion#File conversion":"Raw LC-MS data need to be converted to mzML or mxXML format. We recommend to use ProteoWizard for file conversion.\nDownload and install ProteoWizard Visit the official website to download ProteoWizard.\nFile conversion using MSConvert Fig. 1. MSConvert GUI Step 1. Set options Check the boxes as shown in Fig. 1.\n⚠️ Do NOT check Use Zlib compression. Step 2. Set the Peak Picking filter\nStep 3. Add the Peak Picking filter\nStep 4. Browse and load files\n⚠️ Load files in the vendor format. For example: .d for Bruker and Agilent, .RAW for Thermo. Step 5. Start conversion By default, the converted mzML files will be saved in the same directory as the raw files.\nℹ️ You can also convert files using MSConvert in command line mode. For more information, please refer to the official documentation. "},"title":"data_preparation"},"/docs/feature_evaluation/":{"data":{"":"Working on it."},"title":"Feature evaluation"},"/docs/feature_grouping/":{"data":{"":"Working on it."},"title":"Feature grouping"},"/docs/installation/":{"data":{"":"","installation#Installation":"Installation of Python Visit the official Python website to download Python.\n⚠️ Python 3.9-3.11 is recommended. Download Python 3.11. Installation of masscube The easiest way to install masscube is using pip. Open terminal and run\npip install masscube Dependencies will be automatically installed. This progress may take several minutes. Consider creating a virtual environment if you’re working with Python on multiple projects."},"title":"Installation"},"/docs/parameter/":{"data":{"":"Working on it."},"title":"Parameters"},"/docs/peak_detect/":{"data":{"":"Working on it."},"title":"Peak detection"},"/docs/plans/":{"data":{"":" 🌐 Join us to contribute to the MassCube project! Wanted:"},"title":"Plans for development"},"/docs/quickstart/":{"data":{"":"Let’s get started with the OneClick Untargeted Metabolomics workflow. This page will show you how to process your data with a single line of command.","the-oneclick-untargeted-metabolomics-workflow#The OneClick Untargeted Metabolomics workflow":"The OneClick workflow is designed make the untargeted metabolomics analysis easier. It integrates metadata curation, feature detection, evaluation, alignment, annotation, signal correction, and statistical analysis (Fig. 1).\nFig. 1. The OneClick Untargeted Metabolomics workflow Input In your project folder (e.g. my_project), you need to prepare the following files and folders:\nmy_project ├── data │ ├── sample1.mzML │ ├── sample2.mzML | └── ... |── sample_table.csv └── parameters.csv There are three components for a project:\ndata folder: a file folder containing all raw LC-MS data in .mzML or .mzXML format. It’s mandatory. sample_table.csv file: a csv file to claim the name of samples and their groups including biological groups, quality control samples, or blank samples. An example is here. It’s mandatory. parameters.csv file: a csv file to set parameters for the workflow. An example is here. It’s optional. If not provided, the default parameters will be applied, yet MS/MS annotation will not be performed since the library directory is not provided. See Parameters for more details. Data Preparation Processing Within the project folder, open terminal and run\nuntargeted-metabolomics ⚠️ Make sure the terminal directory is the project folder. For Windows user and MacOS user Output A set of output files will be provided in the project folder depending on the parameters settings. The general output will be\nproject/ ├── data ├── sample_table.csv ├── parameters.csv ├── project.mc ├── aligned_feature_table.csv ├── single_file_output │ ├── sample1.csv │ ├── sample2.csv │ └── ... ├── chromatogram │ ├── sample1.png │ ├── sample2.png │ └── ... ├── ms2_matching │ ├── compound1.png │ ├── compound2.png │ └── ... ├── statistics ├── ... project.mc file: the project file of masscube. aligned_feature_table.csv file: feature table after alignment. single_file_output folder: a file folder containing the detected features from individual files. chromatogram folder: a file folder to store base peak chromatograms (BPCs) for individual files. ms2_matching folder: mirror plot of MS2 matching results. statistics folder: results from statistical analysis. For example, principal component analysis plots. "},"title":"Quick Start"},"/docs/statistical_analysis/":{"data":{"":"Working on it."},"title":"Statistical analysis"},"/docs/visualization/":{"data":{"":"Working on it."},"title":"Data visualization"},"/docs/workflows/":{"data":{"":"Application-oriented workflows as command line applications.","introduction#Introduction":"Mass spectrometry\nMass spectrometry data processing is application-oriented."},"title":"Workflows"}}