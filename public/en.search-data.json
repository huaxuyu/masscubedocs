{"/about/":{"data":{"":"The MassCube project is developed by Dr. Huaxu Yu, a postdoctoral researcher in the Prof. Oliver Fiehn’s lab at the University of California, Davis.","teams#Teams":"Our teams are organized as follows:\nCode and software development Documentation and website Researcher team for testing and validation Labs and researchers interested in collaborating with us are welcome to contact us. Now we have the following labs working together:\nFiehn Lab Huan Lab "},"title":"About Us"},"/contact/":{"data":{"":" Corresponding author: Oliver Fiehn: ofiehn@ucdavis.edu\nDeveloper and maintainer: Huaxu Yu: hxuyu@ucdavis.edu; yhxchem@outlook.com"},"title":"Contact"},"/docs/":{"data":{"":"Hello! Welcome to the MassCube documentation!\nDate: 2024-05-29 Version: 1.0.0","features#Features":" Open-source: MassCube is an open-source project and free for non-commercial use.\nModular design: MassCube is designed with a modular structure, which allows users to easily extend the functionalities.\nUser-friendly: MassCube provides a user-friendly command-line interface (CLI) to facilitate data processing.\nScalable: MassCube is designed to handle large-scale metabolomics data.\nReproducible: MassCube provides a project file to store all the parameters and results, which ensures the reproducibility of the analysis.\nVisualization: MassCube provides visualization tools to help users understand the data better.","getting-started#Getting Started":" Installation Quick Start ","what-is-masscube#What is MassCube?":"The advancement of metabolomics requires robust tools to support mass spectrometry data processing.\nMassCube, an open-source computing framework in Python that provides a flexible infrastructure to support data processing and method development in mass spectrometry-based metabolomics."},"title":"Documentation"},"/docs/algorithms/":{"data":{"":"Application-oriented workflows as command line applications.","introduction#Introduction":"Mass spectrometry data processing is application-oriented, tailored to meet the specific needs of diverse scientific investigations.\nOne of the main purpose of MassCube is to provide a flexible and robust data processing framework that can be adapted to various applications. Here, we provided a series of pre-defined workflows that can be used as command line applications."},"title":"Algorithms"},"/docs/api/":{"data":{"":"Working on it."},"title":"API functions"},"/docs/installation/":{"data":{"":"","install-masscube#Install \u003cem\u003emasscube\u003c/em\u003e":"Install Python Visit the official Python website to download Python.\n⚠️ Python 3.9-3.11 is recommended. Download Python 3.11. Install masscube The easiest way to install masscube is using pip. Open terminal and run\npip install masscube Dependencies will be automatically installed. This progress may take several minutes. Consider creating a virtual environment if you’re working with Python on multiple projects.\nDependencies \"numpy\u003e=1.24\", \"pandas\u003e=2.0\", \"pyteomics\u003e=4.6\", \"scipy\u003e=1.10.1\", \"tqdm\u003e=4.65.0\", \"lxml\u003e=4.9.2\", \"matplotlib\", \"ms_entropy\u003e=1.1.1\", \"networkx\", \"scikit-learn\" ","install-python#Install Python":""},"title":"Installation"},"/docs/plans/":{"data":{"":" 🌐 Join us to contribute to the MassCube project! Wanted:"},"title":"Plans for development"},"/docs/quickstart/":{"data":{"":"Let’s get started with the OneClick untargeted metabolomics workflow. This workflow is designed to streamline untargeted metabolomics analysis, providing comprehensive results with a single command.\nIf you haven’t installed MassCube, please follow the installation guide.","the-oneclick-untargeted-metabolomics-workflow#The OneClick untargeted metabolomics workflow":"Metabolomics data processing could be challenging for researchers. The OneClick untargeted metabolomics workflow was developed to address the burdens and support metabolomics research.\nThe OneClick workflow integrates metadata curation, feature detection, evaluation, alignment, annotation, and statistical analysis to provide users with a comprehensive view of the data (Fig. 1).\nFig. 1. The OneClick untargeted metabolomics workflow Input (3+1) You need three components for the project plus one MS/MS library for annotation.\nIn your project folder (e.g. my_project), you need to prepare the following components:\nmy_project ├── data │ ├── sample1.mzML │ ├── sample2.mzML | └── ... |── sample_table.csv └── parameters.csv data folder: a file folder containing all raw LC-MS data in .mzML or .mzXML format. It’s mandatory. Instructions for file conversion are provided here.\nsample_table.csv file: a csv file to claim the sample groups including biological groups, quality control samples, or blank samples. A template can be downloaded from here. It’s optional. If not provided, normalization and statistical analysis will not be applied. Note: In sample table, please name quality control samples as “qc” and blank samples as “blank” (not case-sensitive).\nparameters.csv file: a csv file to set parameters for the workflow. A template can be downloaded from here. It’s optional. If not provided, the default parameters will be applied, yet annotation will not be performed since the MS/MS library is not provided.\nTo annotate MS/MS spectra, you need to download a MS/MS library from here. For faster loading, please download and use the .pkl format.\nData Preparation Processing In the project folder, open a terminal and run the following command:\nuntargeted-metabolomics Use terminal Make sure the terminal directory is set to the project folder. For Windows user and MacOS user Output After the processing, you will find the following files and folders in the project folder:\nproject/ ├── data ├── sample_table.csv ├── parameters.csv ├── project.mc ├── aligned_feature_table.txt ├── aligned_feature_table_before_normalization.txt ├── ms2.msp ├── single_file_output │ ├── sample1.txt │ ├── sample2.txt │ └── ... ├── chromatogram │ ├── sample1.png │ ├── sample2.png │ └── ... ├── ms2_matching │ ├── compound1.png │ ├── compound2.png │ └── ... ├── statistics ├── ... project.mc file: the project file of masscube. aligned_feature_table.csv file: feature table after alignment (if applied). aligned_feature_table_before_normalization.csv file: feature table before normalization. ms2.msp file: MS/MS spectra for detected features that can be further analyzed on other platforms. single_file_output folder: a folder containing the feature table for each sample. chromatogram folder: a folder containing the chromatogram for each sample. ms2_matching folder: a folder containing the MS/MS matching for each annotated compound. statistics folder: a folder containing the statistical analysis results. "},"title":"Quick start"},"/docs/workflows/":{"data":{"":"Application-oriented workflows as command line applications.","introduction#Introduction":"Mass spectrometry data processing is application-oriented, tailored to meet the specific needs of diverse scientific investigations.\nOne of the main purpose of MassCube is to provide a flexible and robust data processing framework that can be adapted to various applications. Here, we provided a series of pre-defined workflows that can be used as command line applications."},"title":"Workflows"},"/docs/workflows/data_preparation/":{"data":{"":"","file-conversion#File conversion":"Raw LC-MS data need to be converted to mzML or mxXML format.\nOnly centroid data are supported in masscube to maximize the speed and reduce the memory usage. We recommend to use ProteoWizard for file conversion.\nDownload and install ProteoWizard Visit the official website to download ProteoWizard.\nFile conversion using MSConvert Fig. 1. MSConvert GUI Step 1. Set options Check the boxes as shown in Fig. 1.\n⚠️ Do NOT check Use Zlib compression. Step 2. Set the Peak Picking filter\nStep 3. Add the Peak Picking filter\nStep 4. Browse and load files\nStep 5. Start conversion\nBy default, the converted files will be saved in the same directory as the raw files.\nℹ️ You can also convert files using MSConvert in command line mode. For more information, please refer to the documentation. ","parameter-file#Parameter file":"A parameter file (.csv) is used to set parameters for the workflow. A templete is provided here. If not provided, the default parameters will be applied.","sample-table-untargeted-metabolomics-workflow#Sample table (Untargeted metabolomics workflow)":"A sample table (.csv) is used to claim the name of samples and their groups including biological groups, quality control samples, or blank samples. A templete is provided here.\nFor large-scale metabolomics data, it’s not easy to prepare the sample table manually. In masscube, we provide a function to automatically generate the sample table based on the file names in the data folder, and users can further define the groups.\nGenerate sample table In the project folder, open a terminal and run the following command:\ngenerate-sample-table "},"title":"Data preparation"},"/docs/workflows/parameters/":{"data":{"":"Parameters are critical for MS data processing. However, setting parameters are often challenging, especially for beginners. masscube provides a default parameter setting for users to start with.\nThe default parameters are optimized for most untargeted metabolomics studies. Users can also customize the parameters by providing a parameter file.","customize-parameters#Customize parameters":"From the template, users can customize the parameters by providing a parameter file. The parameter file should be a .csv file with the following columns:\nParameter Value Explanation rt_start 0 start of the analytical gradient; minute rt_end 23 end of the analytical gradient; minute ion_mode negative “positive” or “negative” mz_tol_ms1 0.01 m/z tolerance for MS1 spectra; Da mz_tol_ms2 0.015 m/z tolerance for MS2 spectra; Da int_tol 1000 Intensity tolerance; 1000 for TOF and 30000 for orbitrap align_mz_tol 0.01 m/z tolerance for alignment; Da align_rt_tol 0.2 retention time tolerance for alignment; minute msms_library path to the MS2 library; msp or pickle ms2_sim_tol 0.7 MS2 similarity tolerance run_normalization TRUE TRUE or FALSE; whether to run post-acquisition sample normalization normalization_method pqn sample normalization algorithm plot_bpc FALSE TRUE or FALSE; whether to plot base peak chromatogram for individual files plot_ms2 TRUE TRUE or FALSE; whether to plot mirror plots for MS2 matching run_statistics TRUE TRUE or FALSE; whether to run statistical analysis ","default-parameters#Default parameters":"masscube automatically acquire the analytical metadata from the raw files including the mass spectrometer type and ionization mode. The corresponding default parameters will be applied based on the metadata.","key-parameters#Key parameters":"Here we summarized six most important parameters in masscube for untargeted metabolomics data processing:\nMS1 mass tolerance: the mass tolerance for MS1 feature detection. 0.005-0.01 Da is recommended. Intensity tolerance: the intensity tolerance for MS signals. 1000 is recommended for TOF data, and 30000 is recommended for Orbitrap data. Mass tolerance for alignement: the mass tolerance for feature alignment. 0.01-0.015 Da is recommended. RT tolerance for alignment: the RT tolerance for feature alignment. 0.1-0.3 min is recommended. MS/MS similarity score threshold: the threshold for MS/MS similarity score. 0.7-0.8 is recommended. MS/MS library: the MS/MS library for MS/MS annotation. ","more-about-parameters#More about parameters":"Almost all parameters in masscube are tunable to ensure flexibility and adaptability for different datasets. For programmers, please refer to each function and object in the API documentation for more details."},"title":"Parameters"}}